{"version":3,"file":"accessible-menu-bs4.js","sources":["../node_modules/accessible-menu/src/validate.js","../node_modules/accessible-menu/src/_baseMenuToggle.js","../node_modules/accessible-menu/src/_baseMenuItem.js","../node_modules/accessible-menu/src/eventHandlers.js","../node_modules/accessible-menu/src/_baseMenu.js","../node_modules/accessible-menu/src/disclosureMenuItem.js","../node_modules/accessible-menu/src/disclosureMenuToggle.js","../node_modules/accessible-menu/src/disclosureMenu.js","../src/bootstrap4DisclosureMenuItem.js","../src/bootstrap4DisclosureMenuToggle.js","../src/bootstrap4DisclosureMenu.js","../node_modules/accessible-menu/src/menubarItem.js","../node_modules/accessible-menu/src/menubarToggle.js","../node_modules/accessible-menu/src/menubar.js","../src/bootstrap4MenubarItem.js","../src/bootstrap4MenubarToggle.js","../src/bootstrap4Menubar.js","../node_modules/accessible-menu/src/treeviewItem.js","../node_modules/accessible-menu/src/treeviewToggle.js","../node_modules/accessible-menu/src/treeview.js","../src/bootstrap4TreeviewItem.js","../src/bootstrap4TreeviewToggle.js","../src/bootstrap4Treeview.js","../rollup.js"],"sourcesContent":["/**\n * Check to see if the provided elements have a specific contructor.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking instanceof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} contructor - The constructor to check for.\n * @param   {object} elements   - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidInstance(contructor, elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const elementsType = typeof elements;\n\n      throw new TypeError(\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof contructor)) {\n        const elementType = typeof elements[key];\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be an instance of ${contructor.name}. ${elementType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are of a specific type.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking typeof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {string} type   - The type to check for.\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidType(type, values) {\n  try {\n    if (typeof values !== \"object\") {\n      const valuesType = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\n      );\n    }\n\n    for (const key in values) {\n      const valueType = typeof values[key];\n\n      if (valueType !== type) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object.<string>} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        if (values[key] === null) {\n          throw new Error();\n        }\n\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object.<string,string[]>} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\" || Array.isArray(values)) {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach((value) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\n              );\n            }\n          });\n        } else {\n          throw new TypeError(\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      } else {\n        const obj = {};\n        obj[key] = values[key];\n\n        isCSSSelector(obj);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object.<string>} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object.<string>} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\", \"character\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object.<string>} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validTypes = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validTypes.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validTypes.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param   {string}               tagName  - The name of the tag.\n * @param   {object.<HTMLElement>} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (\n    isValidType(\"string\", { tagName }) &&\n    isValidInstance(HTMLElement, elements)\n  ) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param   {string}      event   - The event type.\n * @param   {HTMLElement} element - The element to check.\n *\n * @returns {boolean} - The result.\n */\nexport function isEventSupported(event, element) {\n  if (\n    isValidType(\"string\", { event }) &&\n    isValidInstance(HTMLElement, { element })\n  ) {\n    const eventProp = `on${event}`;\n\n    return typeof element[eventProp] !== \"undefined\";\n  } else {\n    return false;\n  }\n}\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { isTag, isValidType } from \"./validate.js\";\n\n/**\n * A link or button that controls the visibility of a {@link BaseMenu}.\n */\nclass BaseMenuToggle {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}        options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}   options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   options.parentElement       - The element containing the controlled menu.\n   * @param {BaseMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {BaseMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    this.domElements = {\n      toggle: menuToggleElement,\n      parent: parentElement,\n    };\n    this.menuElements = {\n      controlledMenu,\n      parentMenu,\n    };\n    this.isOpen = false;\n\n    /**\n     * Expand event.\n     *\n     * @event accessibleMenuExpand\n     * @type {CustomEvent}\n     * @property {object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n     */\n    this.expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n    /**\n     * Collapse event.\n     *\n     * @event accessibleMenuCollapse\n     * @type {CustomEvent}\n     * @property {object<BaseMenuToggle>} details - The details object containing the BaseMenuToggle itself.\n     */\n    this.collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n  }\n\n  /**\n   * Initializes the menu toggle.\n   *\n   * Initialize does a lot of setup on the menu toggle.\n   *\n   * The most basic setup steps are to ensure that the toggle has `aria-haspopup`\n   * set to \"true\", `aria-expanded` initially set to \"false\" and, if the toggle\n   * element is not a `<button>`, set the `role` to \"button\".\n   *\n   * The next step to the initialization is to ensure both the toggle and the\n   * menu it controlls have IDs.\n   *\n   * If they do not, the following steps take place:\n   * - Generate a random 10 character string,\n   * - Get the innerText of the toggle,\n   * - Set the toggle's ID to: `${toggle-inner-text}-${the-random-string}-menu-button`\n   * - Set the menu's ID to: `${toggle-inner-text}-${the-random-string}-menu`\n   *\n   * Once the ID's have been generated, the menu's `aria-labelledby` is set to\n   * the toggle's ID, and the toggle's `aria-controls` is set to the menu's ID.\n   *\n   * Finally, the collapse method is called to make sure the submenu is closed.\n   */\n  initialize() {\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\n    this.collapse(false);\n  }\n\n  /**\n   * The DOM elements within the toggle.\n   *\n   * @type {object.<HTMLElement>}\n   * @property {HTMLElement} toggle - The menu toggle.\n   * @property {HTMLElement} parent - The menu containing this toggle.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu toggle.\n   *\n   * @type {object.<BaseMenu>}\n   * @property {BaseMenu} controlledMenu - The menu controlled by this toggle.\n   * @property {BaseMenu} parentMenu     - The menu containing this toggle.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The open state on the menu.\n   *\n   * @type {boolean}\n   */\n  get isOpen() {\n    return this.show;\n  }\n\n  set isOpen(value) {\n    isValidType(\"boolean\", { value });\n\n    this.show = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"true\", adds the\n   * {@link BaseMenu#openClass|open class} to the toggle's parent menu item\n   * and controlled menu, and removed the {@link BaseMenu#closeClass|closed class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuExpand}\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   * @fires accessibleMenuExpand\n   */\n  expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...openClass);\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...closeClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Sets the toggle's `aria-expanded` to \"false\", adds the\n   * {@link BaseMenu#closeClass|closed class} to the toggle's parent menu item\n   * and controlled menu, and removes the {@link BaseMenu#openClass|open class}\n   * from the toggle's parent menu item and controlled menu.\n   *\n   * If `emit` is set to `true`, this will also emit a custom event\n   * called {@link accessibleMenuCollapse}\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   * @fires accessibleMenuCollapse\n   */\n  collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.add(...closeClass);\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else {\n        this.elements.controlledMenu.dom.menu.classList.remove(...openClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.collapseEvent);\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\", calls {@link BaseMenuToggle#expand|expand},\n   * and sets the {@link BaseMenuToggle#isOpen|isOpen} value to `true`.\n   */\n  open() {\n    // Set proper focus state on the child.\n    this.elements.controlledMenu.focusState = \"self\";\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"self\"\n   * and the parent menu's focus state to \"child\",\n   * and calls {@link BaseMenuToggle#expand|expand}.\n   */\n  preview() {\n    // Set proper focus state on the parent.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Sets the controlled menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and the parent menu's focus state to \"self\", blurs the controlled menu\n   * and sets it's {@link BaseMenu#currentChild|current child index} to 0,\n   * calls {@link BaseMenuToggle#collapse|collapse}, and sets\n   * the {@link BaseMenuToggle#isOpen|isOpen} value to `false`.\n   */\n  close() {\n    if (this.isOpen) {\n      // Reset controlled menu.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      // Set proper focus states on the parent.\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n\n      // Collapse the controlled menu.\n      this.collapse();\n\n      // Set the open flag.\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu between `true` and `false`.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\n      toggle.close()\n    );\n  }\n}\n\nexport default BaseMenuToggle;\n","/* eslint-disable jsdoc/no-undefined-types */\n\n/**\n * A basic navigation link contained inside of a {@link BaseMenu}.\n */\nclass BaseMenuItem {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}          options                         - The options for generating the menu item.\n   * @param {HTMLElement}     options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}     options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}        options.parentMenu              - The parent menu.\n   * @param {boolean}         [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {?BaseMenu}       [options.childMenu = null]      - The child menu.\n   * @param {?BaseMenuToggle} [options.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    this.domElements = {\n      item: menuItemElement,\n      link: menuLinkElement,\n    };\n    this.menuElements = {\n      parentMenu,\n      childMenu,\n      toggle,\n    };\n    this.isController = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @type {object.<HTMLElement>}\n   * @property {HTMLElement} item - The menu item.\n   * @property {HTMLElement} link - The menu item's link.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu item.\n   *\n   * @type {object.<BaseMenu,BaseMenuToggle>}\n   * @property {BaseMenu}        parentMenu - The menu containing this menu item.\n   * @property {?BaseMenu}       childMenu  - The menu contained within this menu item.\n   * @property {?BaseMenuToggle} toggle     - The menu toggle within this menu item that controls the `childMenu`.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @type {boolean}\n   */\n  get isSubmenuItem() {\n    return this.isController;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  focus() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link BaseMenu#shouldFocus|shouldFocus} value is `true`.\n   */\n  blur() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n *\n * @returns {string} - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: isNaN(key) && !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n      Asterisk: key === \"*\" || key === 56,\n    };\n\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","import BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isValidInstance,\n  isValidType,\n  isCSSSelector,\n  isValidClassList,\n  isValidState,\n  isValidEvent,\n  isValidHoverType,\n  isEventSupported,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n *\n * This is intended to be used as a \"base\" to other menus and not to be used on\n * it's own in the DOM.\n *\n * Use a {@link DisclosureMenu}, {@link Menubar}, or {@link Treeview} instead.\n */\nclass BaseMenu {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {?HTMLElement}           [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {?HTMLElement}           [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {?(string|string[])}     [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {?(string|string[])}     [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = false]        - A flag to mark the root menu.\n   * @param {?BaseMenu}              [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    this.domElements = {\n      menu: menuElement,\n      menuItems: [],\n      submenuItems: [],\n      submenuToggles: [],\n      submenus: [],\n      controller: controllerElement,\n      container: containerElement,\n    };\n    this.domSelectors = {\n      menuItems: menuItemSelector,\n      menuLinks: menuLinkSelector,\n      submenuItems: submenuItemSelector,\n      submenuToggles: submenuToggleSelector,\n      submenus: submenuSelector,\n    };\n    this.menuElements = {\n      menuItems: [],\n      submenuToggles: [],\n      controller: null,\n      parentMenu,\n      rootMenu: isTopLevel ? this : null,\n    };\n    this.submenuOpenClass = openClass || \"\";\n    this.submenuCloseClass = closeClass || \"\";\n    this.root = isTopLevel;\n    this.focussedChild = 0;\n    this.state = \"none\";\n    this.event = \"none\";\n    this.hover = hoverType;\n    this.delay = hoverDelay;\n\n    // Set default class types.\n    this.MenuType = BaseMenu;\n    this.MenuItemType = BaseMenuItem;\n    this.MenuToggleType = BaseMenuToggle;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * The following steps will be taken to initialize the menu:\n   * - {@link BaseMenu#validate|Validate} that the menu can initialize,\n   * - find the root menu of the menu tree if it isn't already set,\n   * - populate all DOM elements within the {@link BaseMenu#dom|dom},\n   * - if the current menu is the root menu _and_ has a controller, initialize\n   *   the controller, and\n   * - populate the menu elements within the {@link BaseMenu#elements|elements}\n   *\n   * @throws {Error} Will throw an Error if validate returns `false`.\n   */\n  initialize() {\n    if (!this.validate()) {\n      throw new Error(\n        \"AccesibleMenu: cannot initialize menu. See other error messaged for more information.\"\n      );\n    }\n\n    const { MenuToggleType } = this;\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this.findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this.setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n        });\n\n        this.menuElements.controller = toggle;\n      }\n    }\n\n    this.createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @type {object.<HTMLElement,HTMLElement[]>}\n   * @property {HTMLElement}   menu           - The menu element.\n   * @property {HTMLElement[]} menuItems      - An array of menu items.\n   * @property {HTMLElement[]} submenuItems   - An array of menu items that also contain submenu elements.\n   * @property {HTMLElement[]} submenuToggles - An array of menu links that function as submenu toggles.\n   * @property {HTMLElement[]} submenus       - An array of submenu elements.\n   * @property {HTMLElement}   controller     - The toggle for this menu.\n   * @property {HTMLElement}   container      - The container for this menu.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The CSS selectors used by the menu to populate the {@link BaseMenu#dom|dom}.\n   *\n   * @type {object.<string>}\n   * @property {string} menuItems      - The CSS selector for menu items.\n   * @property {string} menuLinks      - The CSS selector for menu links.\n   * @property {string} submenuItems   - The CSS selector for menu items containing submenus.\n   * @property {string} submenuToggles - The CSS selector for menu links that function as submenu toggles.\n   * @property {string} submenus       - The CSS selector for for submenus.\n   */\n  get selectors() {\n    return this.domSelectors;\n  }\n\n  /**\n   * The declared accessible-menu elements within the menu.\n   *\n   * @type {object.<BaseMenu,BaseMenuToggle,BaseMenuItem[],BaseMenuToggle[]>}\n   * @property {BaseMenuItem[]}   menuItems      - An array of menu items.\n   * @property {BaseMenuToggle[]} submenuToggles - An array of menu toggles.\n   * @property {?BaseMenuToggle}  controller     - A menu toggle that controls this menu.\n   * @property {?BaseMenu}        parentMenu     - The parent menu.\n   * @property {?BaseMenu}        rootMenu       - The root menu of the menu tree.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The class(es) to apply when the menu is open.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @type {string|string[]}\n   */\n  get openClass() {\n    return this.isTopLevel\n      ? this.submenuOpenClass\n      : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is closed.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @type {string|string[]}\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this.submenuCloseClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @type {boolean}\n   */\n  get isTopLevel() {\n    return this.root;\n  }\n\n  /**\n   * The index of the currently selected {@link BaseMenuItem|menu item} in the menu.\n   *\n   * - Attempting to set a value less than -1 will set the current child to -1.\n   * - Attempting to set a value greater than or equal to the number of menu items\n   *   will set the current child to the index of the last menu item in the menu.\n   *\n   * If the current menu has a parent menu _and_ the menu's\n   * {@link BaseMenu#currentEvent|current event} is \"mouse\", The parent menu\n   * will have it's current child updated as well to help with transitioning\n   * between mouse and keyboard naviation.\n   *\n   * @type {number}\n   */\n  get currentChild() {\n    return this.focussedChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * - If the menu has submenus, setting the focus state to \"none\" or \"self\" will\n   *   update all child menus to have the focus state of \"none\".\n   * - If the menu has a parent menu, setting the focus state to \"self\" or \"child\"\n   *   will update all parent menus to have the focus state of \"child\".\n   *\n   * @type {string}\n   */\n  get focusState() {\n    return this.state;\n  }\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @type {string}\n   */\n  get currentEvent() {\n    return this.event;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @type {BaseMenuItem}\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @type {string}\n   */\n  get hoverType() {\n    return this.root ? this.hover : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @type {number}\n   */\n  get hoverDelay() {\n    return this.root ? this.delay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * A flag to check if the menu's focus methods should _actually_ move the focus in the DOM.\n   *\n   * This will be `false` unless any of the following criteria are met:\n   * - The menu's {@link BaseMenu#currentEvent|current event} is \"keyboard\".\n   * - The menu's current event is \"character\".\n   * - The menu's current event is \"mouse\" _and_ the menu's\n   *   {@link BaseMenu#hoverType|hover type} is \"dynamic\".\n   *\n   * @type {boolean}\n   */\n  get shouldFocus() {\n    let check = false;\n\n    if (this.currentEvent === \"keyboard\" || this.currentEvent === \"character\") {\n      check = true;\n    }\n\n    if (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\") {\n      check = true;\n    }\n\n    return check;\n  }\n\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    if (this.submenuOpenClass !== value) {\n      this.submenuOpenClass = value;\n    }\n  }\n\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    if (this.submenuCloseClass !== value) {\n      this.submenuCloseClass = value;\n    }\n  }\n\n  set currentChild(value) {\n    isValidType(\"number\", { value });\n\n    /**\n     * Update the parent menu's current child to make sure clicks\n     * and other jumps don't interfere with keyboard navigation.\n     *\n     * @param {BaseMenu} menu - The initial menu.\n     */\n    function setParentChild(menu) {\n      const updateEvents = [\"mouse\", \"character\"];\n\n      if (\n        updateEvents.includes(menu.currentEvent) &&\n        menu.elements.parentMenu\n      ) {\n        let index = 0;\n        let found = false;\n\n        while (\n          !found &&\n          index < menu.elements.parentMenu.elements.menuItems.length\n        ) {\n          const menuItem = menu.elements.parentMenu.elements.menuItems[index];\n\n          if (\n            menuItem.isSubmenuItem &&\n            menuItem.elements.toggle.elements.controlledMenu === menu\n          ) {\n            found = true;\n\n            menu.elements.parentMenu.currentEvent = menu.currentEvent;\n            menu.elements.parentMenu.currentChild = index;\n          }\n\n          index++;\n        }\n      }\n    }\n\n    if (value < -1) {\n      this.focussedChild = -1;\n      setParentChild(this);\n    } else if (value >= this.elements.menuItems.length) {\n      this.focussedChild = this.elements.menuItems.length - 1;\n      setParentChild(this);\n    } else if (this.focusChild !== value) {\n      this.focussedChild = value;\n      setParentChild(this);\n    }\n  }\n\n  set focusState(value) {\n    isValidState({ value });\n\n    if (this.state !== value) {\n      this.state = value;\n    }\n\n    if (\n      this.elements.submenuToggles.length > 0 &&\n      (value === \"self\" || value === \"none\")\n    ) {\n      this.elements.submenuToggles.forEach((toggle) => {\n        toggle.elements.controlledMenu.focusState = \"none\";\n      });\n    }\n\n    if (this.elements.parentMenu && (value === \"self\" || value === \"child\")) {\n      this.elements.parentMenu.focusState = \"child\";\n    }\n  }\n\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    if (this.event !== value) {\n      this.event = value;\n\n      if (this.elements.submenuToggles.length > 0) {\n        this.elements.submenuToggles.forEach((submenuToggle) => {\n          submenuToggle.elements.controlledMenu.currentEvent = value;\n        });\n      }\n    }\n  }\n\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    if (this.hover !== value) {\n      this.hover = value;\n    }\n  }\n\n  set hoverDelay(value) {\n    isValidType(\"number\", { value });\n\n    if (this.delay !== value) {\n      this.delay = value;\n    }\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @returns {boolean} - The result of the validation.\n   */\n  validate() {\n    const {\n      domElements,\n      domSelectors,\n      menuElements,\n      submenuOpenClass,\n      submenuCloseClass,\n      root,\n      hover,\n      delay,\n    } = this;\n\n    let check = true;\n\n    if (domElements.container !== null || domElements.controller !== null) {\n      if (\n        !isValidInstance(HTMLElement, {\n          menuElement: domElements.menu,\n          controllerElement: domElements.controller,\n          containerElement: domElements.container,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isValidInstance(HTMLElement, {\n        menuElement: domElements.menu,\n      })\n    ) {\n      check = false;\n    }\n\n    if (domSelectors.submenuItems !== \"\") {\n      if (\n        !isCSSSelector({\n          menuItemSelector: domSelectors.menuItems,\n          menuLinkSelector: domSelectors.menuLinks,\n          submenuItemSelector: domSelectors.submenuItems,\n          submenuToggleSelector: domSelectors.submenuToggles,\n          submenuSelector: domSelectors.submenus,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isCSSSelector({\n        menuItemSelector: domSelectors.menuItems,\n        menuLinkSelector: domSelectors.menuLinks,\n      })\n    ) {\n      check = false;\n    }\n\n    if (\n      submenuOpenClass !== \"\" &&\n      !isValidClassList({ openClass: submenuOpenClass })\n    ) {\n      check = false;\n    }\n\n    if (\n      submenuCloseClass !== \"\" &&\n      !isValidClassList({ closeClass: submenuCloseClass })\n    ) {\n      check = false;\n    }\n\n    if (!isValidType(\"boolean\", { isTopLevel: root })) {\n      check = false;\n    }\n\n    if (\n      menuElements.parentMenu !== null &&\n      !isValidInstance(BaseMenu, { parentMenu: menuElements.parentMenu })\n    ) {\n      check = false;\n    }\n\n    if (!isValidHoverType({ hoverType: hover })) {\n      check = false;\n    }\n\n    if (!isValidType(\"number\", { hoverDelay: delay })) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * This will set the actual `domElement` property, so all existing items in a\n   * given `domElement` property will be removed when this is run.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  setDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = domElements.filter((item) =>\n            filter(item)\n          );\n        } else {\n          this.domElements[elementType] = domElements;\n        }\n      } else {\n        this.domElements[elementType] = domElements.filter((item) =>\n          baseFilter(item)\n        );\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Adds an element to DOM elements within the menu.\n   *\n   * This is an additive function, so existing items in a given `domElement`\n   * property will not be touched.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  addDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements.filter((item) => filter(item)),\n          ];\n        } else {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements,\n          ];\n        }\n      } else {\n        this.domElements[elementType] = [\n          ...this.domElements[elementType],\n          ...domElements.filter((item) => baseFilter(item)),\n        ];\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Clears DOM elements within the menu.\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  clearDOMElementType(elementType) {\n    if (elementType === \"menu\") return;\n\n    if (Array.isArray(this.domElements[elementType])) {\n      this.domElements[elementType] = [];\n    } else if (typeof this.domElements[elementType] !== \"undefined\") {\n      this.domElements[elementType] = null;\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   *\n   * Utiliizes {@link BaseMenu#setDOMElementType|setDOMElementType},\n   * {@link BaseMenu#clearDOMElementType|clearDOMElementType},\n   * and {@link BaseMenu#addDOMElementType|addDOMElementType}.\n   */\n  setDOMElements() {\n    this.setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this.setDOMElementType(\"submenuItems\");\n\n      this.clearDOMElementType(\"submenuToggles\");\n      this.clearDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach((item) => {\n        this.addDOMElementType(\"submenuToggles\", item);\n        this.addDOMElementType(\"submenus\", item);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this.menuElements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this.findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   */\n  createChildElements() {\n    const { MenuType, MenuItemType, MenuToggleType } = this;\n\n    this.dom.menuItems.forEach((element) => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this.menuElements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this.menuElements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   *\n   * - Adds a `focus` listener to every menu item so when it gains focus,\n   *   it will set the item's containing menu's {@link BaseMenu#focusState|focus state}\n   *   to \"self\".\n   */\n  handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * Depending on what is supported either `touchstart` and `touchend` or\n   * `mousedown` and `mouseup` will be used for all \"click\" event handling.\n   *\n   * - Adds a `touchend`/`mouseup` listener to the document so if the user clicks\n   *   outside of the menu when it is open, the menu will close.\n   * - Adds a `touchstart`/`mousedown` listener to every menu item that will blur\n   *   all menu items in the entire menu structure (starting at the root menu) and\n   *   then properly focus the clicked item.\n   * - Adds a `touchend`/`mouseup` listener to every submenu item that will properly\n   *   toggle the submenu open/closed.\n   * - Adds a `touchend`/`mouseup` listener to the menu's controller\n   *   (if the menu is the root menu) so when it is clicked it will properly\n   *   toggle open/closed.\n   */\n  handleClick() {\n    // Use touch over mouse events when supported.\n    const startEventType = isEventSupported(\"touchstart\", this.dom.menu)\n      ? \"touchstart\"\n      : \"mousedown\";\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu   - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event  - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    this.elements.menuItems.forEach((item, index) => {\n      // Properly focus the current menu item.\n      item.dom.link.addEventListener(startEventType, () => {\n        this.currentEvent = \"mouse\";\n        this.elements.rootMenu.blurChildren();\n        this.focusChild(index);\n      });\n\n      // Properly toggle submenus open and closed.\n      if (item.isSubmenuItem) {\n        item.elements.toggle.dom.toggle[`on${endEventType}`] = (event) => {\n          this.currentEvent = \"mouse\";\n          toggleToggle(this, item.elements.toggle, event);\n        };\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle[`on${endEventType}`] = (event) => {\n        this.currentEvent = \"mouse\";\n        toggleToggle(this, this.elements.controller, event);\n      };\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   *\n   * Adds `mouseenter` listeners to all menu items and `mouseleave` listeners\n   * to all submenu items which function differently depending on\n   * the menu's {@link BaseMenu#hoverType|hover type}.\n   *\n   * **Hover Type \"on\"**\n   * - When a `mouseenter` event triggers on any menu item the menu's\n   *   {@link BaseMenu#currentChild| current child} value will change to that\n   *   menu item.\n   * - When a `mouseenter` event triggers on a submenu item the\n   *   {@link BaseMenuToggle#preview|preview method} for the submenu item's\n   *   toggle will be called.\n   * - When a `mouseleave` event triggers on an open submenu item the\n   *   {@link BaseMenuToggle#close|close method} for the submenu item's toggle\n   *   will be called after a delay set by the menu's {@link BaseMenu#hoverDelay|hover delay}.\n   *\n   * **Hover Type \"dynamic\"**\n   * - When a `mouseenter` event triggers on any menu item the menu's\n   *   current child value will change to that menu item.\n   * - When a `mouseenter` event triggers on any menu item, and the menu's\n   *   {@link BaseMenu#focusState|focus state} is not \"none\", the menu item\n   *   will be focused.\n   * - When a `mouseenter` event triggers on a submenu item, and a submenu is\n   *   already open, the preview method for the submenu item's toggle will be called.\n   * - When a `mouseenter` event triggers on a submenu item, and no submenu is\n   *   open, no submenu-specific methods will be called.\n   * - When a `mouseleave` event triggers on an open submenu item that is not a\n   *   root-level submenu item the close method for the submenu item's toggle\n   *   will be called and the submenu item will be focused after a delay set by\n   *   the menu's hover delay.\n   * - When a `mouseleave` event triggers on an open submenu item that is a\n   *   root-level submenu item no submenu-specific methods will be called.\n   *\n   * **Hover Type \"off\"**\n   * All `mouseenter` and `mouseleave` events are ignored.\n   */\n  handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"mouseenter\", () => {\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"mouseleave\", () => {\n          if (this.hoverType === \"on\") {\n            if (this.hoverDelay > 0) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n              }, this.hoverDelay);\n            } else {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              if (this.hoverDelay > 0) {\n                setTimeout(() => {\n                  this.currentEvent = \"mouse\";\n                  menuItem.elements.toggle.close();\n                  this.focusCurrentChild();\n                }, this.hoverDelay);\n              } else {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assit the {@link BaseMenu#handleKeyup|handleKeyup method}.\n   *\n   * - Adds a `keydown` listener to the menu's controller (if the menu is the root menu).\n   *   - Blocks propagation on \"Space\", \"Enter\", and \"Escape\" keys.\n   */\n  handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"keydown\",\n        (event) => {\n          this.currentEvent = \"keyboard\";\n\n          const key = keyPress(event);\n\n          if (key === \"Space\" || key === \"Enter\") {\n            preventEvent(event);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * - Adds a `keyup` listener to the menu's controller (if the menu is the root menu).\n   *   - Opens the menu when the user hits \"Space\" or \"Enter\".\n   */\n  handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.open();\n          this.focusFirstChild();\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"self\" and\n   * focusses the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * value is `true`.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   *\n   * Sets the menu's {@link BaseMenu#focusState|focus state} to \"none\"\n   * and blurs the menu if the menu's {@link BaseMenu#shouldFocus|shouldFocus}\n   * vallue is `true`.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    this.focusState = \"self\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Focuses the menu's child at a given index.\n   *\n   * @param {number} index - The index of the child to focus.\n   */\n  focusChild(index) {\n    this.blurCurrentChild();\n    this.currentChild = index;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.focusChild(0);\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.focusChild(this.elements.menuItems.length - 1);\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.focusChild(this.currentChild + 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.focusChild(this.currentChild - 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    this.focusState = \"none\";\n\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.shouldFocus) {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.shouldFocus) {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\n  }\n\n  /**\n   * Blurs all children and submenu's children.\n   */\n  blurChildren() {\n    this.elements.menuItems.forEach((menuItem) => {\n      menuItem.blur();\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.elements.childMenu.blurChildren();\n      }\n    });\n  }\n}\n\nexport default BaseMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a {@link DisclousreMenu}.\n *\n * @extends BaseMenuItem\n */\nclass DisclosureMenuItem extends BaseMenuItem {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}                    options                         - The options for generating the menu item.\n   * @param {HTMLElement}               options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}               options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {DisclosureMenu}            options.parentMenu              - The parent menu.\n   * @param {boolean}                   [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {DisclosureMenu|null}       [options.childMenu = null]      - The child menu.\n   * @param {DisclosureMenuToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                   [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default DisclosureMenuItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a {@link DisclousreMenu}.\n *\n * @extends BaseMenuToggle\n */\nclass DisclosureMenuToggle extends BaseMenuToggle {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}              options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}         options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}         options.parentElement       - The element containing the controlled menu.\n   * @param {DisclosureMenu}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {DisclosureMenu|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}             [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Calls the {@link DisclosureMenuToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#open|BaseMenuToggle's open method}.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Calls the {@link DisclosureMenuToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#preview|BaseMenuToggle's preview method}.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Calls the {@link DisclosureMenuToggle#closeChildren| closeChildren method}\n   * and _then_ {@link BaseMenuToggle#close|BaseMenuToggle's close method}.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default DisclosureMenuToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport DisclosureMenuItem from \"./disclosureMenuItem.js\";\nimport DisclosureMenuToggle from \"./disclosureMenuToggle.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\nimport { isValidType, isEventSupported } from \"./validate.js\";\n\n/**\n * An accessible disclosure menu in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html|Example Disclosure for Navigation Menus}\n *\n * @extends BaseMenu\n */\nclass DisclosureMenu extends BaseMenu {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}                 options                              - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                  - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]      - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]       - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]        - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a]  - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]       - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]   - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}     [options.containerElement = null]    - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)} [options.openClass = show]           - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)} [options.closeClass = hide]          - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = false]         - A flag to mark the root menu.\n   * @param {(DisclosureMenu|null)}  [options.parentMenu = null]          - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]            - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]           - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [options.optionalKeySupport = false] - A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   * @param {boolean}                [options.initialize = true]          - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    optionalKeySupport = false,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set default class types.\n    this.MenuType = DisclosureMenu;\n    this.MenuItemType = DisclosureMenuItem;\n    this.MenuToggleType = DisclosureMenuToggle;\n\n    this.currentChild = -1;\n    this.optionalKeySupport = optionalKeySupport;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, \"Home\", and \"End\") to the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's optionalKeySupport.\n   *\n   * @type {boolean}\n   */\n  get optionalKeySupport() {\n    return this.isTopLevel\n      ? this.optionalSupport\n      : this.elements.rootMenu.optionalKeySupport;\n  }\n\n  set optionalKeySupport(value) {\n    isValidType(\"boolean\", { optionalKeySupport: value });\n\n    this.optionalSupport = value;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link DisclosureMenu#handleFocus|focus},\n   * {@link DisclosureMenu#handleClick|click},\n   * {@link DisclosureMenu#handleHover|hover},\n   * {@link DisclosureMenu#handleKeydown|keydown}, and\n   * {@link DisclosureMenu#handleKeyup|keyup} events for the menu.\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this.handleFocus();\n      this.handleClick();\n      this.handleHover();\n      this.handleKeydown();\n      this.handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * Depending on what is supported either `touchstart` and `touchend` or\n   * `mousedown` and `mouseup` will be used for all \"click\" event handling.\n   *\n   * - Adds all event listeners listed in\n   *   {@link BaseMenu#handleClick|BaseMenu's handleClick method}, and\n   * - adds a `touchend`/`mouseup` listener to the `document` so if the user\n   *   clicks outside of the menu it will close if it is open.\n   *\n   */\n  handleClick() {\n    super.handleClick();\n\n    // Use touch over mouse events when supported.\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(endEventType, (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link DisclosureMenu#handleKeyup|handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#handleKeydown|BaseMenu's handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"Space\", \"Enter\", and \"Escape\".\n   *   - _If_ {@link DisclosureMenu#optionalKeySupport|optional keyboard support}\n   *     is enabled, blocks propagation on the following keys:\n   *     \"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \"ArrowLeft\", \"Home\", and \"End\".\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (this.focusState === \"self\") {\n        const submenuKeys = [\"Space\", \"Enter\"];\n        const controllerKeys = [\"Escape\"];\n        const parentKeys = [\"Escape\"];\n\n        if (this.optionalKeySupport) {\n          const keys = [\n            \"ArrowUp\",\n            \"ArrowRight\",\n            \"ArrowDown\",\n            \"ArrowLeft\",\n            \"Home\",\n            \"End\",\n          ];\n          if (keys.includes(key)) {\n            preventEvent(event);\n          }\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        } else if (this.elements.parentMenu && parentKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#handleKeyup|BaseMenu's handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html#kbd_label|WAI ARIA Pracitices Example Disclosure for Navigation Menus}):\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Tab_ or _Shift + Tab_ | Move keyboard focus among top-level buttons, and if a dropdown is open, into and through links in the dropdown. |\n   * | _Space_ or _Enter_ | <ul><li>If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.</li><li>If focus is on a link:<ul><li>If any link has aria-current set, removes it.</li><li>Sets aria-current=\"page\" on the focused link.</li><li>Activates the focused link.</li></ul></li></ul> |\n   * | _Escape_ | If a dropdown is open, closes it and sets focus on the button that controls that dropdown. |\n   * | _Down Arrow_ or _Right Arrow_ (Optional}) | <ul><li>If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.</li><li>if focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.</li><li>If focus is on a link, and it is not the last link, moves focus to the next link.</li></ul> |\n   * | _Up Arrow_ or _Left Arrow_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the previous button.</li><li>If focus is on a link, and it is not the first link, moves focus to the previous link.</li></ul> |\n   * | _Home_ (Optional}) | <ul><li>If focus is on a button, and it is not the first button, moves focus to the first button.</li><li>If focus is on a link, and it is not the first link, moves focus to the first link.</li></ul> |\n   * | _End_ (Optional}) | <ul><li>If focus is on a button, and it is not the last button, moves focus to the last button.</li><li>If focus is on a link, and it is not the last link, moves focus to the last link.</li></ul> |\n   *\n   * The optional keybindings are controlled by the menu's {@link DisclosureMenu#optionalKeySupport|optionalKeySupport} value.\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (this.focusState === \"self\") {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.toggle.preview();\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape\n          // - If a dropdown is open, closes it.\n          // - If was within the closed dropdown, sets focus on the button that controls that dropdown.\n          const hasOpenChild = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n\n          if (hasOpenChild) {\n            preventEvent(event);\n            this.closeChildren();\n          } else if (this.elements.parentMenu) {\n            preventEvent(event);\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.closeChildren();\n            this.elements.parentMenu.focusCurrentChild();\n          } else if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (this.optionalKeySupport) {\n          if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n            // Hitting the Down or Right Arrow:\n            // - If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.\n            // - If focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.\n            // - If focus is on a link, and it is not the last link, moves focus to the next link.\n            preventEvent(event);\n\n            if (\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen\n            ) {\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.focusNextChild();\n            }\n          } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n            // Hitting the Up or Left Arrow:\n            // - If focus is on a button, and it is not the first button, moves focus to the previous button.\n            // - If focus is on a link, and it is not the first link, moves focus to the previous link.\n            preventEvent(event);\n            this.focusPreviousChild();\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - If focus is on a button, and it is not the first button, moves focus to the first button.\n            // - If focus is on a link, and it is not the first link, moves focus to the first link.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - If focus is on a button, and it is not the last button, moves focus to the last button.\n            // - If focus is on a link, and it is not the last link, moves focus to the last link.\n            preventEvent(event);\n            this.focusLastChild();\n          }\n        }\n      }\n    });\n  }\n}\n\nexport default DisclosureMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport DisclosureMenuItem from \"accessible-menu/src/disclosureMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a Bootstrap4DisclosureMenu.\n */\nclass Bootstrap4DisclosureMenuItem extends DisclosureMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                              param0                         - The menu item object.\n   * @param {HTMLElement}                         param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}                         param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Bootstrap4DisclosureMenu}            param0.parentMenu              - The parent menu.\n   * @param {boolean}                             [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Bootstrap4DisclosureMenu|null}       [param0.childMenu = null]      - The child menu.\n   * @param {Bootstrap4DisclosureMenuToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                             [param0.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n      initialize: false,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default Bootstrap4DisclosureMenuItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport DisclosureMenuToggle from \"accessible-menu/src/disclosureMenuToggle.js\";\n\n/*\n * A link or button that controls the visibility of a Bootstrap4DisclosureMenu.\n */\nclass Bootstrap4DisclosureMenuToggle extends DisclosureMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                        param0                     - The menu toggle object.\n   * @param {HTMLElement}                   param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}                   param0.parentElement       - The element containing the controlled menu.\n   * @param {Bootstrap4DisclosureMenu}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {Bootstrap4DisclosureMenu|null} [param0.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}                       [param0.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n      initialize: false,\n    });\n\n    // Set the container for the toggle.\n    // This differs based on if the menu is top-level or not.\n    this.domElements.container = controlledMenu.isTopLevel\n      ? controlledMenu.dom.container\n      : controlledMenu.dom.menu;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the toggle by removing the default bootstrap toggle information\n   * and running the parent's initialization.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.container.classList.add(\"collapse\");\n\n    if (this.dom.toggle.hasAttribute(\"data-toggle\")) {\n      this.dom.toggle.removeAttribute(\"data-toggle\");\n    }\n\n    if (this.dom.toggle.hasAttribute(\"data-target\")) {\n      this.dom.toggle.removeAttribute(\"data-target\");\n    }\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.dom.container.classList.add(openClass);\n      } else {\n        this.dom.container.classList.add(...openClass);\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.dom.container.classList.remove(closeClass);\n      } else {\n        this.dom.container.classList.remove(...closeClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.dom.container.classList.add(closeClass);\n      } else {\n        this.dom.container.classList.add(...closeClass);\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.dom.container.classList.remove(openClass);\n      } else {\n        this.dom.container.classList.remove(...openClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.collapseEvent);\n    }\n  }\n}\n\nexport default Bootstrap4DisclosureMenuToggle;\n","import DisclosureMenu from \"accessible-menu/src/disclosureMenu.js\";\nimport Bootstrap4DisclosureMenuItem from \"./bootstrap4DisclosureMenuItem.js\";\nimport Bootstrap4DisclosureMenuToggle from \"./bootstrap4DisclosureMenuToggle.js\";\n\n/**\n * An accessible disclosure menu in the DOM using Bootstrap 4.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html\n */\nclass Bootstrap4DisclosureMenu extends DisclosureMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                        param0                               - The menu object.\n   * @param {HTMLElement}                   param0.menuElement                   - The menu element in the DOM.\n   * @param {string}                        [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}                        [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}                        [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}                        [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                        [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}              [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}              [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string}                        [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string}                        [param0.closeClass = \"\"]             - The class to apply when a menu is \"closed\".\n   * @param {boolean}                       [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {Bootstrap4DisclosureMenu|null} [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}                        [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}                        [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                       [param0.optionalKeySupport = false]  - A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   * @param {boolean}                       [param0.initialize = true]           - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    optionalKeySupport = false,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n      optionalKeySupport,\n      initialize: false,\n    });\n\n    // Set default class types.\n    this.MenuType = Bootstrap4DisclosureMenu;\n    this.MenuItemType = Bootstrap4DisclosureMenuItem;\n    this.MenuToggleType = Bootstrap4DisclosureMenuToggle;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default Bootstrap4DisclosureMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a {@link Menubar}.\n *\n * @extends BaseMenuItem\n */\nclass MenubarItem extends BaseMenuItem {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}             options                         - The options for generating the menu item.\n   * @param {HTMLElement}        options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}        options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Menubar}            options.parentMenu              - The parent menu.\n   * @param {boolean}            [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Menubar|null}       [options.childMenu = null]      - The child menu.\n   * @param {MenubarToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}            [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initialize the menu item.\n   *\n   * Initialize will call the {@link BaseMenuItem#initialize|BaseMenuItem's initialize method}\n   * as well as set the menu item's `role` to \"none\",\n   * the menu link's `role` to \"menuitem\", and\n   * the menu link's `tabIndex` to -1 in the DOM.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.item.setAttribute(\"role\", \"none\");\n    this.dom.link.setAttribute(\"role\", \"menuitem\");\n    this.dom.link.tabIndex = -1;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#focus|BaseMenuItem's focus method}\n   * as well as set the menu link's `tabIndex` to 0 if the parent menu\n   * is the root menu.\n   */\n  focus() {\n    super.focus();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = 0;\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#blur|BaseMenuItem's blur method}\n   * as well as set the menu link's `tabIndex` to -1 if the parent menu\n   * is the root menu.\n   */\n  blur() {\n    super.blur();\n\n    if (this.elements.parentMenu.isTopLevel) {\n      this.dom.link.tabIndex = -1;\n    }\n  }\n}\n\nexport default MenubarItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a {@link Menubar}.\n *\n * @extends BaseMenuToggle\n */\nclass MenubarToggle extends BaseMenuToggle {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}       options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}  options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}  options.parentElement       - The element containing the controlled menu.\n   * @param {Menubar}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {Menubar|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}      [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   *\n   * Calls the {@link MenubarToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#open|BaseMenuToggle's open method}.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   *\n   * Calls the {@link MenubarToggle#closeSiblings| closeSiblings method}\n   * and _then_ {@link BaseMenuToggle#preview|BaseMenuToggle's preview method}.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   *\n   * Calls the {@link MenubarToggle#closeChildren| closeChildren method}\n   * and _then_ {@link BaseMenuToggle#close|BaseMenuToggle's close method}.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default MenubarToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport MenubarItem from \"./menubarItem.js\";\nimport MenubarToggle from \"./menubarToggle.js\";\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\nimport { isEventSupported } from \"./validate.js\";\n\n/**\n * An accessible menubar navigation in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/menubar/menubar-1/menubar-1.html|Navigation Menubar Example}\n *\n * @extends BaseMenu\n */\nclass Menubar extends BaseMenu {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}     [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)} [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)} [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = false]        - A flag to mark the root menu.\n   * @param {(Menubar|null)}         [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [options.initialize = true]         - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    this.MenuType = Menubar;\n    this.MenuItemType = MenubarItem;\n    this.MenuToggleType = MenubarToggle;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link Menubar#handleFocus|focus},\n   * {@link Menubar#handleClick|click},\n   * {@link Menubar#handleHover|hover},\n   * {@link Menubar#handleKeydown|keydown}, and\n   * {@link Menubar#handleKeyup|keyup} events for the menu.\n   *\n   * This will also set the menu's `role` to \"menubar\" in the DOM.\n   *\n   * If the menu is a root menu the first menu item's `tabIndex` will be set to\n   * 0 in the DOM.\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this.dom.menu.setAttribute(\"role\", \"menubar\");\n\n      this.handleFocus();\n      this.handleClick();\n      this.handleHover();\n      this.handleKeydown();\n      this.handleKeyup();\n\n      if (this.isTopLevel) {\n        this.elements.menuItems[0].dom.link.tabIndex = 0;\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   *\n   * Depending on what is supported either `touchstart` and `touchend` or\n   * `mousedown` and `mouseup` will be used for all \"click\" event handling.\n   *\n   * - Adds all event listeners listed in\n   *   {@link BaseMenu#handleClick|BaseMenu's handleClick method}, and\n   * - adds a `touchend`/`mouseup` listener to the `document` so if the user\n   *   clicks outside of the menu it will close if it is open.\n   */\n  handleClick() {\n    super.handleClick();\n\n    // Use touch over mouse events when supported.\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(endEventType, (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link Menubar#handleKeyup|handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#handleKeydown|BaseMenu's handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"ArrowUp\", \"ArrowRight\",\n   *     \"ArrowDown\", \"ArrowLeft\", \"Home\", \"End\", \"Space\", \"Enter\", \"Escape\",\n   *     and \"A\" through \"Z\".\n   *   - Completely closes the menu and moves focus out if the \"Tab\" key is pressed.\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Tab\") {\n        // Hitting Tab:\n        // - Moves focus out of the menu.\n        if (this.elements.rootMenu.focusState !== \"none\") {\n          this.elements.rootMenu.blur();\n          this.elements.rootMenu.closeChildren();\n        } else {\n          this.elements.rootMenu.focus();\n        }\n      }\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (key === \"Character\") {\n        preventEvent(event);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          const keys = [\"ArrowRight\", \"ArrowLeft\", \"Home\", \"End\"];\n          const submenuKeys = [\"Space\", \"Enter\", \"ArrowDown\", \"ArrowUp\"];\n          const controllerKeys = [\"Escape\"];\n\n          if (keys.includes(key)) {\n            preventEvent(event);\n          } else if (\n            this.currentMenuItem.isSubmenuItem &&\n            submenuKeys.includes(key)\n          ) {\n            preventEvent(event);\n          } else if (this.elements.controller && controllerKeys.includes(key)) {\n            preventEvent(event);\n          }\n        }\n      } else {\n        const keys = [\n          \"Escape\",\n          \"ArrowRight\",\n          \"ArrowLeft\",\n          \"ArrowDown\",\n          \"ArrowUp\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Space\", \"Enter\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#handleKeyup|BaseMenu's handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/2019/WD-wai-aria-practices-1.2-20191218/examples/menubar/menubar-1/menubar-1.html#kbd_label|Navigation Menubar Example}):\n   *\n   * **Menubar**\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Space_ or _Enter_ | Opens submenu and moves focus to first item in the submenu. |\n   * | _Right Arrow_ | <ul><li>Moves focus to the next item in the menubar.</li><li>If focus is on the last item, moves focus to the first item.</li></ul> |\n   * | _Left Arrow_ | <ul><li>Moves focus to the previous item in the menubar.</li><li>If focus is on the first item, moves focus to the last item.</li></ul> |\n   * | _Down Arrow_ | Opens submenu and moves focus to first item in the submenu. |\n   * | _Up Arrow_ | Opens submenu and moves focus to last item in the submenu. |\n   * | _Home_ | Moves focus to first item in the menubar. |\n   * | _End_ | Moves focus to last item in the menubar. |\n   * | _Character_ | <ul><li>Moves focus to next item in the menubar having a name that starts with the typed character.</li><li>If none of the items have a name starting with the typed character, focus does not move.</li></ul> |\n   *\n   * **Submenu**\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Space_ or _Enter_ | <ul><li>Activates menu item, causing the link to be activated.</li><li>NOTE: the links go to dummy pages; use the browser go-back function to return to this menubar example page.</li></ul> |\n   * | _Escape_ | <ul><li>Closes submenu.</li><li>Moves focus to parent menubar item.</li></ul> |\n   * | _Right Arrow_ | <ul><li>If focus is on an item with a submenu, opens the submenu and places focus on the first item.</li><li>If focus is on an item that does not have a submenu:<ul><li>Closes submenu.</li><li>Moves focus to next item in the menubar.</li><li>Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.</li></ul></li></ul> |\n   * | _Left Arrow_ | <ul><li>Closes submenu and moves focus to parent menu item.</li><li>If parent menu item is in the menubar, also:<ul><li>moves focus to previous item in the menubar.</li><li>Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.</li></ul></li></ul> |\n   * | _Down Arrow_ | <ul><li>Moves focus to the next item in the submenu.</li><li>If focus is on the last item, moves focus to the first item.</li></ul> |\n   * | _Up Arrow_ | <ul><li>Moves focus to previous item in the submenu.</li><li>If focus is on the first item, moves focus to the last item.</li></ul> |\n   * | Home | Moves focus to the first item in the submenu. |\n   * | End | Moves focus to the last item in the submenu. |\n   * | _Character_ | <ul><li>Moves focus to the next item having a name that starts with the typed character.</li><li>If none of the items have a name starting with the typed character, focus does not move.</li></ul> |\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n      const { altKey, crtlKey, metaKey } = event;\n      const modifier = altKey || crtlKey || metaKey;\n\n      if (key === \"Character\" && !modifier) {\n        // Hitting Character:\n        // - Moves focus to next item in the menubar having a name that starts with the typed character.\n        // - If none of the items have a name starting with the typed character, focus does not move.\n        preventEvent(event);\n        this.elements.rootMenu.currentEvent = \"character\";\n        this.focusNextChildWithCharacter(event.key);\n      } else if (this.isTopLevel) {\n        if (this.focusState === \"self\") {\n          if (key === \"Space\" || key === \"Enter\") {\n            // Hitting Space or Enter:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            } else {\n              this.currentMenuItem.dom.link.click();\n            }\n          } else if (key === \"ArrowRight\") {\n            // Hitting the Right Arrow:\n            // - Moves focus to the next item in the menubar.\n            // - If focus is on the last item, moves focus to the first item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusNextChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowLeft\") {\n            // Hitting the Left Arrow:\n            // - Moves focus to the previous item in the menubar.\n            // - If focus is on the first item, moves focus to the last item.\n            // - If focus was on an open submenu and the newly focussed item has a submenu, open the submenu.\n            preventEvent(event);\n\n            // Store the current item's info if its an open dropdown.\n            const previousChildOpen =\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen;\n\n            this.focusPreviousChild();\n\n            // Open the newly focussed submenu if applicable.\n            if (previousChildOpen) {\n              if (this.currentMenuItem.isSubmenuItem) {\n                this.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.currentMenuItem.elements.toggle.preview();\n              } else {\n                this.closeChildren();\n              }\n            }\n          } else if (key === \"ArrowDown\") {\n            // Hitting the Down Arrow:\n            // - Opens submenu and moves focus to first item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusFirstChild();\n              });\n            }\n          } else if (key === \"ArrowUp\") {\n            // Hitting the Up Arrow:\n            // - Opens submenu and moves focus to last item in the submenu.\n            if (this.currentMenuItem.isSubmenuItem) {\n              preventEvent(event);\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.toggle.open();\n              // This ensures the the menu is _visually_ open before the child is focussed.\n              requestAnimationFrame(() => {\n                this.currentMenuItem.elements.childMenu.focusLastChild();\n              });\n            }\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - Moves focus to first item in the menubar.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - Moves focus to last item in the menubar.\n            preventEvent(event);\n            this.focusLastChild();\n          } else if (key === \"Escape\") {\n            // Hitting Escape:\n            // - Closes menu.\n            const hasOpenChild = this.elements.submenuToggles.some(\n              (toggle) => toggle.isOpen\n            );\n\n            if (hasOpenChild) {\n              preventEvent(event);\n              this.closeChildren();\n            } else if (\n              this.isTopLevel &&\n              this.elements.controller &&\n              this.elements.controller.isOpen\n            ) {\n              preventEvent(event);\n              this.elements.controller.close();\n              this.focusController();\n            }\n          }\n        }\n      } else {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - Activates menu item, causing the link to be activated.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape:\n          // - Closes submenu.\n          // - Moves focus to parent menubar item.\n          preventEvent(event);\n          this.elements.rootMenu.closeChildren();\n          this.elements.rootMenu.focusCurrentChild();\n        } else if (key === \"ArrowRight\") {\n          // Hitting the Right Arrow:\n          // - If focus is on an item with a submenu, opens the submenu and places focus on the first item.\n          // - If focus is on an item that does not have a submenu:\n          //   - Closes submenu.\n          //   - Moves focus to next item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n            this.currentMenuItem.elements.toggle.open();\n            // This ensures the the menu is _visually_ open before the child is focussed.\n            requestAnimationFrame(() => {\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            });\n          } else {\n            preventEvent(event);\n            this.elements.rootMenu.closeChildren();\n            this.elements.rootMenu.focusNextChild();\n\n            if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n              this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n            }\n          }\n        } else if (key === \"ArrowLeft\") {\n          // Hitting the Left Arrow:\n          // - Closes submenu and moves focus to parent menu item.\n          // - If parent menu item is in the menubar, also:\n          //   - moves focus to previous item in the menubar.\n          //   - Opens submenu of newly focused menubar item, keeping focus on that parent menubar item.\n          if (this.elements.parentMenu.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.elements.parentMenu.currentMenuItem.elements.toggle.close();\n            this.elements.parentMenu.focusCurrentChild();\n\n            if (this.elements.parentMenu === this.elements.rootMenu) {\n              this.elements.rootMenu.closeChildren();\n              this.elements.rootMenu.focusPreviousChild();\n\n              if (this.elements.rootMenu.currentMenuItem.isSubmenuItem) {\n                this.elements.rootMenu.currentMenuItem.elements.childMenu.currentEvent =\n                  \"keyboard\";\n                this.elements.rootMenu.currentMenuItem.elements.toggle.preview();\n              }\n            }\n          }\n        } else if (key === \"ArrowDown\") {\n          // Hitting the Down Arrow:\n          // - Moves focus to the next item in the menubar.\n          // - If focus is on the last item, moves focus to the first item.\n          preventEvent(event);\n          this.focusNextChild();\n        } else if (key === \"ArrowUp\") {\n          // Hitting the Up Arrow:\n          // - Moves focus to the previous item in the menubar.\n          // - If focus is on the first item, moves focus to the last item.\n          preventEvent(event);\n          this.focusPreviousChild();\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - Moves focus to first item in the menubar.\n          preventEvent(event);\n          this.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - Moves focus to last item in the menubar.\n          preventEvent(event);\n          this.focusLastChild();\n        }\n      }\n    });\n  }\n\n  /**\n   * Focus the menu's next child.\n   *\n   * If the currently focussed child in the menu is the last child then this will\n   * focus the first child in the menu.\n   */\n  focusNextChild() {\n    // If the current child is the last child of the menu, focus the menu's first child.\n    if (this.currentChild === this.elements.menuItems.length - 1) {\n      this.focusFirstChild();\n    } else {\n      this.focusChild(this.currentChild + 1);\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   *\n   * If the currently focussed child in the menu is the first child then this will\n   * focus the last child in the menu.\n   */\n  focusPreviousChild() {\n    // If the current child is the first child of the menu, focus the menu's last child.\n    if (this.currentChild === 0) {\n      this.focusLastChild();\n    } else {\n      this.focusChild(this.currentChild - 1);\n    }\n  }\n\n  /**\n   * Focus the menu's next child starting with a specific letter.\n   *\n   * @param {string} char - The character to look for.\n   */\n  focusNextChildWithCharacter(char) {\n    // Ensure the character is lowercase just to be safe.\n    const match = char.toLowerCase();\n    let index = this.currentChild + 1;\n    let found = false;\n\n    while (!found && index < this.elements.menuItems.length) {\n      let text = \"\";\n\n      // Attempt to use the browser to get proper innerText,\n      // otherwise fall back to textContent.\n      if (this.elements.menuItems[index].dom.item.innerText) {\n        text = this.elements.menuItems[index].dom.item.innerText;\n      } else {\n        text = this.elements.menuItems[index].dom.item.textContent;\n      }\n\n      // Remove spaces, make lowercase, and grab the first chracter of the string.\n      text = text.replace(/[\\s]/g, \"\").toLowerCase().charAt(0);\n\n      // Focus the child if the text matches, otherwise move on.\n      if (text === match) {\n        found = true;\n        this.focusChild(index);\n      }\n\n      index++;\n    }\n  }\n}\n\nexport default Menubar;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport MenubarItem from \"accessible-menu/src/menubarItem.js\";\n\n/**\n * A basic navigation link contained inside of a Bootstrap4Menubar.\n */\nclass Bootstrap4MenubarItem extends MenubarItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                       param0                         - The menu item object.\n   * @param {HTMLElement}                  param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}                  param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Bootstrap4Menubar}            param0.parentMenu              - The parent menu.\n   * @param {boolean}                      [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Bootstrap4Menubar|null}       [param0.childMenu = null]      - The child menu.\n   * @param {Bootstrap4MenubarToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                      [param0.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n      initialize: false,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default Bootstrap4MenubarItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport MenubarToggle from \"accessible-menu/src/menubarToggle.js\";\n\n/*\n * A link or button that controls the visibility of a Bootstrap4Menubar.\n */\nclass Bootstrap4MenubarToggle extends MenubarToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                 param0                     - The menu toggle object.\n   * @param {HTMLElement}            param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}            param0.parentElement       - The element containing the controlled menu.\n   * @param {Bootstrap4Menubar}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {Bootstrap4Menubar|null} [param0.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}                [param0.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n      initialize: false,\n    });\n\n    // Set the container for the toggle.\n    // This differs based on if the menu is top-level or not.\n    this.domElements.container = controlledMenu.isTopLevel\n      ? controlledMenu.dom.container\n      : controlledMenu.dom.menu;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the toggle by removing the default bootstrap toggle information\n   * and running the parent's initialization.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.container.classList.add(\"collapse\");\n\n    if (this.dom.toggle.hasAttribute(\"data-toggle\")) {\n      this.dom.toggle.removeAttribute(\"data-toggle\");\n    }\n\n    if (this.dom.toggle.hasAttribute(\"data-target\")) {\n      this.dom.toggle.removeAttribute(\"data-target\");\n    }\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.dom.container.classList.add(openClass);\n      } else {\n        this.dom.container.classList.add(...openClass);\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.dom.container.classList.remove(closeClass);\n      } else {\n        this.dom.container.classList.remove(...closeClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.dom.container.classList.add(closeClass);\n      } else {\n        this.dom.container.classList.add(...closeClass);\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.dom.container.classList.remove(openClass);\n      } else {\n        this.dom.container.classList.remove(...openClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.collapseEvent);\n    }\n  }\n}\n\nexport default Bootstrap4MenubarToggle;\n","import Menubar from \"accessible-menu/src/menubar.js\";\nimport Bootstrap4MenubarItem from \"./bootstrap4MenubarItem.js\";\nimport Bootstrap4MenubarToggle from \"./bootstrap4MenubarToggle.js\";\n\n/**\n * An accessible menubar navigation in the DOM.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/menubar/menubar-1/menubar-1.html\n */\nclass Bootstrap4Menubar extends Menubar {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                 param0                               - The menu object.\n   * @param {HTMLElement}            param0.menuElement                   - The menu element in the DOM.\n   * @param {string}                 [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}                 [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}                 [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}       [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}       [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string}                 [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string}                 [param0.closeClass = \"\"]             - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {Bootstrap4Menubar|null} [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}                 [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}                 [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [param0.initialize = true]           - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n      initialize: false,\n    });\n\n    this.MenuType = Bootstrap4Menubar;\n    this.MenuItemType = Bootstrap4MenubarItem;\n    this.MenuToggleType = Bootstrap4MenubarToggle;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default Bootstrap4Menubar;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a {@link Treeview}.\n *\n * @extends BaseMenuItem\n */\nclass TreeviewItem extends BaseMenuItem {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}              options                         - The options for generating the menu item.\n   * @param {HTMLElement}         options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}         options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Treeview}            options.parentMenu              - The parent menu.\n   * @param {boolean}             [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Treeview|null}       [options.childMenu = null]      - The child menu.\n   * @param {TreeviewToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}             [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initialize the menu item.\n   *\n   * Initialize will call the {@link BaseMenuItem#initialize|BaseMenuItem's initialize method}\n   * as well as set the menu item's `role` to \"none\",\n   * the menu link's `role` to \"treeitem\", and\n   * the menu link's `tabIndex` to -1 in the DOM.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.item.setAttribute(\"role\", \"none\");\n    this.dom.link.setAttribute(\"role\", \"treeitem\");\n    this.dom.link.tabIndex = -1;\n  }\n\n  /**\n   * Focuses the menu item's link if the parent menu's\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#focus|BaseMenuItem's focus method}\n   * as well as set the menu link's `tabIndex` to 0.\n   */\n  focus() {\n    super.focus();\n\n    this.dom.link.tabIndex = 0;\n  }\n\n  /**\n   * Blurs the menu item's link if the parent menu's\n   * {@link Menubar#shouldFocus|shouldFocus} value is `true`.\n   *\n   * This will call the {@link BaseMenuItem#blur|BaseMenuItem's blur method}\n   * as well as set the menu link's `tabIndex` to -1.\n   */\n  blur() {\n    super.blur();\n\n    this.dom.link.tabIndex = -1;\n  }\n}\n\nexport default TreeviewItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/**\n * A link or button that controls the visibility of a {@link Treeview}.\n *\n * @extends BaseMenuToggle\n */\nclass TreeviewToggle extends BaseMenuToggle {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}                  options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}             options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}             options.parentElement       - The element containing the controlled menu.\n   * @param {TreeviewNavigation}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {TreeviewNavigation|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}                 [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default TreeviewToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport TreeviewItem from \"./treeviewItem.js\";\nimport TreeviewToggle from \"./treeviewToggle.js\";\nimport { keyPress, preventEvent } from \"./eventHandlers.js\";\n\n/**\n * An accessible treeview navigation in the DOM.\n *\n * See {@link https://www.w3.org/TR/wai-aria-practices-1.2/examples/treeview/treeview-2/treeview-2a.html|Navigation Treeview Example Using Computed Properties}\n *\n * @extends BaseMenu\n */\nclass Treeview extends BaseMenu {\n  /**\n   * @inheritdoc\n   *\n   * @param {object}                 options                             - The options for generating the menu.\n   * @param {HTMLElement}            options.menuElement                 - The menu element in the DOM.\n   * @param {string}                 [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                 [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                 [options.submenuItemSelector]       - The CSS selector string for menu items containing submenus.\n   * @param {string}                 [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                 [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {(HTMLElement|null)}     [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {(HTMLElement|null)}     [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {(string|string[]|null)} [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {(string|string[]|null)} [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                [options.isTopLevel = false]        - A flag to mark the root menu.\n   * @param {(Treeview|null)}        [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                 [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                 [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                [options.initialize = true]         - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set default class types.\n    this.MenuType = Treeview;\n    this.MenuItemType = TreeviewItem;\n    this.MenuToggleType = TreeviewToggle;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * Initialize will call the {@link BaseMenu#initialize|BaseMenu's initialize method}\n   * as well as set up {@link Treeview#handleFocus|focus},\n   * {@link Treeview#handleClick|click},\n   * {@link Treeview#handleHover|hover},\n   * {@link Treeview#handleKeydown|keydown}, and\n   * {@link Treeview#handleKeyup|keyup} events for the menu.\n   *\n   * If the menu is a root menu it's `role` will be set to \"tree\" and the first\n   * menu item's `tabIndex` will be set to 0 in the DOM.\n   *\n   * If the menu is _not_ a root menu it's `role` will be set to \"group\".\n   *\n   * If the BaseMenu's initialize method throws an error,\n   * this will catch it and log it to the console.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      if (this.isTopLevel) {\n        this.dom.menu.setAttribute(\"role\", \"tree\");\n        this.elements.menuItems[0].dom.link.tabIndex = 0;\n      } else {\n        this.dom.menu.setAttribute(\"role\", \"group\");\n      }\n\n      this.handleFocus();\n      this.handleClick();\n      this.handleHover();\n      this.handleKeydown();\n      this.handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   *\n   * This method exists to assist the {@link Treeview#handleKeyup|handleKeyup method}.\n   * - Adds all `keydown` listeners from {@link BaseMenu#handleKeydown|BaseMenu's handleKeydown method}\n   * - Adds a `keydown` listener to the menu/all submenus.\n   *   - Blocks propagation on the following keys: \"ArrowUp\", \"ArrowRight\",\n   *     \"ArrowDown\", \"ArrowLeft\", \"Home\", \"End\", \"Space\", \"Enter\", \"Escape\",\n   *     \"*\" (asterisk), and \"A\" through \"Z\".\n   *   - Moves focus out if the \"Tab\" key is pressed.\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (key === \"Tab\") {\n        // Hitting Tab:\n        // - Moves focus out of the menu.\n        if (this.elements.rootMenu.focusState !== \"none\") {\n          this.elements.rootMenu.blur();\n        } else {\n          this.elements.rootMenu.focus();\n        }\n      }\n\n      if (this.focusState === \"self\") {\n        const keys = [\n          \"Space\",\n          \"ArrowUp\",\n          \"ArrowDown\",\n          \"ArrowLeft\",\n          \"Asterisk\",\n          \"Home\",\n          \"End\",\n        ];\n        const submenuKeys = [\"Enter\", \"ArrowRight\"];\n        const controllerKeys = [\"Escape\"];\n\n        if (keys.includes(key)) {\n          preventEvent(event);\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   *\n   * Adds all `keyup` listeners from {@link BaseMenu#handleKeyup|BaseMenu's handleKeyup method}.\n   *\n   * Adds the following keybindings (explanations are taken from the\n   * {@link https://www.w3.org/TR/2019/WD-wai-aria-practices-1.2-20191218/examples/treeview/treeview-2/treeview-2a.html#kbd_label|Navigation Treeview Example Using Computed Properties}):\n   *\n   * | Key | Function |\n   * | --- | --- |\n   * | _Enter_ or _Space_ | Performs the default action (e.g. onclick event) for the focused node. |\n   * | _Down arrow_ | <ul><li>Moves focus to the next node that is focusable without opening or closing a node.</li><li>If focus is on the last node, does nothing.</li></ul> |\n   * | _Up arrow_ | <ul><li>Moves focus to the previous node that is focusable without opening or closing a node.</li><li>If focus is on the first node, does nothing.</li></ul> |\n   * | _Right arrow_ | <ul><li>When focus is on a closed node, opens the node; focus does not move.</li><li>When focus is on a open node, moves focus to the first child node.</li><li>When focus is on an end node, does nothing.</li></ul> |\n   * | _Left arrow_ | <ul><li>When focus is on an open node, closes the node.</li><li>When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.</li><li>When focus is on a root node that is also either an end node or a closed node, does nothing.</li></ul> |\n   * | _Home_ | Moves focus to first node without opening or closing a node. |\n   * | _End_ | Moves focus to the last node that can be focused without expanding any nodes that are closed. |\n   * | _a-z_, _A-Z_ | <ul><li>Focus moves to the next node with a name that starts with the typed character.</li><li>Search wraps to first node if a matching name is not found among the nodes that follow the focused node.</li><li>Search ignores nodes that are descendants of closed nodes.</li></ul> |\n   * | _* (asterisk)_ | <ul><li>Expands all closed sibling nodes that are at the same level as the focused node.</li><li>Focus does not move.</li></ul> |\n   * | _Escape_ | If the root menu is collapsible, collapses the menu and focuses the menu's controlling element. |\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n      const { altKey, crtlKey, metaKey } = event;\n      const modifier = altKey || crtlKey || metaKey;\n\n      if (key === \"Character\" && !modifier) {\n        // Hitting Character:\n        // - Focus moves to the next node with a name that starts with the typed character.\n        // - Search wraps to first node if a matching name is not found among the nodes that follow the focused node.\n        // - Search ignores nodes that are descendants of closed nodes.\n        preventEvent(event);\n        this.elements.rootMenu.currentEvent = \"character\";\n        this.focusNextNodeWithCharacter(event.key);\n      } else if (this.focusState === \"self\") {\n        if (key === \"Enter\" || key === \"Space\") {\n          // Hitting Space or Enter:\n          // - Performs the default action (e.g. onclick event) for the focused node.\n          // - If focus is on a closed node, opens the node; focus does not move.\n          preventEvent(event);\n\n          if (this.currentMenuItem.isSubmenuItem) {\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.currentMenuItem.elements.toggle.close();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (key === \"ArrowDown\") {\n          // Hitting the Down Arrow:\n          // - Moves focus to the next node that is focusable without opening or closing a node.\n          // - If focus is on the last node, does nothing.\n          preventEvent(event);\n\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            this.currentMenuItem.elements.toggle.isOpen\n          ) {\n            this.blurCurrentChild();\n            this.currentMenuItem.elements.childMenu.currentEvent =\n              this.currentEvent;\n            this.currentMenuItem.elements.childMenu.focusFirstChild();\n          } else if (\n            !this.isTopLevel &&\n            this.currentChild === this.elements.menuItems.length - 1\n          ) {\n            this.focusParentsNextChild();\n          } else {\n            this.focusNextChild();\n          }\n        } else if (key === \"ArrowUp\") {\n          // Hitting the Up Arrow:\n          // - Moves focus to the previous node that is focusable without opening or closing a node.\n          // - If focus is on the first node, does nothing.\n          preventEvent(event);\n\n          const previousMenuItem =\n            this.elements.menuItems[this.currentChild - 1];\n\n          if (\n            previousMenuItem &&\n            previousMenuItem.isSubmenuItem &&\n            previousMenuItem.elements.toggle.isOpen\n          ) {\n            this.blurCurrentChild();\n            this.currentChild = this.currentChild - 1;\n            this.currentMenuItem.elements.childMenu.currentEvent =\n              this.currentEvent;\n            this.focusChildsLastNode();\n          } else if (!this.isTopLevel && this.currentChild === 0) {\n            this.blurCurrentChild();\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusCurrentChild();\n          } else {\n            this.focusPreviousChild();\n          }\n        } else if (key === \"ArrowRight\") {\n          // Hitting the Right Arrow:\n          // - When focus is on a closed node, opens the node; focus does not move.\n          // - When focus is on a open node, moves focus to the first child node.\n          // - When focus is on an end node, does nothing.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n\n            if (this.currentMenuItem.elements.toggle.isOpen) {\n              this.blurCurrentChild();\n              this.currentMenuItem.elements.childMenu.currentEvent =\n                this.currentEvent;\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.currentMenuItem.elements.toggle.preview();\n            }\n          }\n        } else if (key === \"ArrowLeft\") {\n          // Hitting the Left Arrow:\n          // - When focus is on an open node, closes the node.\n          // - When focus is on a child node that is also either an end node or a closed node, moves focus to its parent node.\n          // - When focus is on a root node that is also either an end node or a closed node, does nothing.\n          preventEvent(event);\n\n          if (\n            this.currentMenuItem.isSubmenuItem &&\n            this.currentMenuItem.elements.toggle.isOpen\n          ) {\n            this.currentMenuItem.elements.childMenu.blurCurrentChild();\n            this.currentMenuItem.elements.toggle.close();\n          } else if (!this.isTopLevel) {\n            this.blurCurrentChild();\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.focusCurrentChild();\n          }\n        } else if (key === \"Home\") {\n          // Hitting Home:\n          // - Moves focus to first node without opening or closing a node.\n          preventEvent(event);\n          this.blurCurrentChild();\n          this.elements.rootMenu.focusFirstChild();\n        } else if (key === \"End\") {\n          // Hitting End:\n          // - Moves focus to the last node that can be focused without expanding any nodes that are closed.\n          preventEvent(event);\n          this.blurCurrentChild();\n          this.elements.rootMenu.focusLastNode();\n        } else if (key === \"Asterisk\") {\n          // Hitting Asterisk:\n          // - Expands all closed sibling nodes that are at the same level as the focused node.\n          // - Focus does not move.\n          preventEvent(event);\n          this.openChildren();\n        }\n      }\n    });\n  }\n\n  /**\n   * Focus the menu's last node of the entire expanded menu.\n   *\n   * This includes all _open_ child menu items.\n   */\n  focusLastNode() {\n    const numberOfItems = this.elements.menuItems.length - 1;\n    const lastChild = this.elements.menuItems[numberOfItems];\n\n    if (lastChild.isSubmenuItem && lastChild.elements.toggle.isOpen) {\n      this.currentChild = numberOfItems;\n      lastChild.elements.childMenu.currentEvent = this.currentEvent;\n      lastChild.elements.childMenu.focusLastNode();\n    } else {\n      this.focusLastChild();\n    }\n  }\n\n  /**\n   * Open all submenu children.\n   */\n  openChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.preview());\n  }\n\n  /**\n   * Focus the menu's next node starting with a specific letter.\n   *\n   * This includes all _open_ child menu items.\n   *\n   * Wraps to the first node if no match is found after the current node.\n   *\n   * @param {string} char - The character to look for.\n   */\n  focusNextNodeWithCharacter(char) {\n    /**\n     * Gets all the menu's items and submenu's items.\n     *\n     * @param {Treeview} menu - The menu.\n     *\n     * @returns {TreeviewItem[]} - The menu items.\n     */\n    function getOpenMenuItems(menu) {\n      let menuItems = [];\n\n      menu.elements.menuItems.forEach((menuItem) => {\n        menuItems.push(menuItem);\n\n        if (menuItem.isSubmenuItem && menuItem.elements.toggle.isOpen) {\n          menuItems = [\n            ...menuItems,\n            ...getOpenMenuItems(\n              menuItem.elements.toggle.elements.controlledMenu\n            ),\n          ];\n        }\n      });\n\n      return menuItems;\n    }\n\n    // Ensure the character is lowercase just to be safe.\n    const match = char.toLowerCase();\n    // Sort the menu items so the child _after_ the current child is first to be searched.\n    const menuItems = getOpenMenuItems(this.elements.rootMenu);\n    const currentItem = menuItems.indexOf(this.currentMenuItem) + 1;\n    const sortedMenuItems = [\n      ...menuItems.slice(currentItem),\n      ...menuItems.slice(0, currentItem),\n    ];\n    let ctr = 0;\n    let found = false;\n\n    while (!found && ctr < sortedMenuItems.length) {\n      let text = \"\";\n\n      // Attempt to use the browser to get proper innerText,\n      // otherwise fall back to textContent.\n      if (sortedMenuItems[ctr].dom.item.innerText) {\n        text = sortedMenuItems[ctr].dom.item.innerText;\n      } else {\n        text = sortedMenuItems[ctr].dom.item.textContent;\n      }\n\n      // Remove spaces, make lowercase, and grab the first chracter of the string.\n      text = text.replace(/[\\s]/g, \"\").toLowerCase().charAt(0);\n\n      // Focus the child if the text matches, otherwise move on.\n      if (text === match) {\n        found = true;\n        const menu = sortedMenuItems[ctr].elements.parentMenu;\n        const index = menu.elements.menuItems.indexOf(sortedMenuItems[ctr]);\n        this.elements.rootMenu.blurChildren();\n        menu.focusChild(index);\n      }\n\n      ctr++;\n    }\n  }\n\n  /**\n   * Focus the parent menu's next child.\n   *\n   * This will cascade up through to the root menu.\n   */\n  focusParentsNextChild() {\n    if (!this.elements.parentMenu) return;\n\n    this.elements.parentMenu.currentEvent = this.currentEvent;\n\n    if (\n      this.elements.parentMenu.currentChild ===\n      this.elements.parentMenu.elements.menuItems.length - 1\n    ) {\n      this.elements.parentMenu.blurCurrentChild();\n      this.elements.parentMenu.focusParentsNextChild();\n    } else {\n      this.blurChildren();\n      this.elements.parentMenu.focusNextChild();\n    }\n  }\n\n  /**\n   * Focus the last child of the current child's submenu.\n   *\n   * This will cascade down through to the last open menu.\n   */\n  focusChildsLastNode() {\n    this.currentMenuItem.elements.childMenu.currentEvent = this.currentEvent;\n    this.currentMenuItem.elements.childMenu.focusLastChild();\n\n    if (\n      this.currentMenuItem.elements.childMenu.currentMenuItem.isSubmenuItem &&\n      this.currentMenuItem.elements.childMenu.currentMenuItem.elements.toggle\n        .isOpen\n    ) {\n      this.currentMenuItem.elements.childMenu.blurCurrentChild();\n      this.currentMenuItem.elements.childMenu.focusChildsLastNode();\n    }\n  }\n}\n\nexport default Treeview;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport TreeviewItem from \"accessible-menu/src/treeviewItem.js\";\n\n/**\n * A basic navigation link contained inside of a Bootstrap4Treeview.\n */\nclass Bootstrap4TreeviewItem extends TreeviewItem {\n  /**\n   * @inheritdoc\n   * @param {object}                        options                         - The options for generating the menu item.\n   * @param {HTMLElement}                   options.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}                   options.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Treeview}                      options.parentMenu              - The parent menu.\n   * @param {boolean}                       [options.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Bootstrap4Treeview|null}       [options.childMenu = null]      - The child menu.\n   * @param {Bootstrap4TreeviewToggle|null} [options.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                       [options.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n      initialize: false,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default Bootstrap4TreeviewItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport TreeviewToggle from \"accessible-menu/src/treeviewToggle.js\";\n\n/**\n * A link or button that controls the visibility of a Bootstrap4Treeview.\n */\nclass Bootstrap4TreeviewToggle extends TreeviewToggle {\n  /**\n   * @inheritdoc\n   * @param {object}                            options                     - The options for generating the menu toggle.\n   * @param {HTMLElement}                       options.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}                       options.parentElement       - The element containing the controlled menu.\n   * @param {Bootstrap4TreeviewNavigation}      options.controlledMenu      - The menu controlled by this toggle.\n   * @param {Bootstrap4TreeviewNavigation|null} [options.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}                           [options.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n      initialize: false,\n    });\n\n    // Set the container for the toggle.\n    // This differs based on if the menu is top-level or not.\n    this.domElements.container = controlledMenu.isTopLevel\n      ? controlledMenu.dom.container\n      : controlledMenu.dom.menu;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the toggle by removing the default bootstrap toggle information\n   * and running the parent's initialization.\n   */\n  initialize() {\n    super.initialize();\n\n    this.dom.container.classList.add(\"collapse\");\n\n    if (this.dom.toggle.hasAttribute(\"data-toggle\")) {\n      this.dom.toggle.removeAttribute(\"data-toggle\");\n    }\n\n    if (this.dom.toggle.hasAttribute(\"data-target\")) {\n      this.dom.toggle.removeAttribute(\"data-target\");\n    }\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.dom.container.classList.add(openClass);\n      } else {\n        this.dom.container.classList.add(...openClass);\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.dom.container.classList.remove(closeClass);\n      } else {\n        this.dom.container.classList.remove(...closeClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.dom.container.classList.add(closeClass);\n      } else {\n        this.dom.container.classList.add(...closeClass);\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.dom.container.classList.remove(openClass);\n      } else {\n        this.dom.container.classList.remove(...openClass);\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.collapseEvent);\n    }\n  }\n}\n\nexport default Bootstrap4TreeviewToggle;\n","import Treeview from \"accessible-menu/src/treeview.js\";\nimport Bootstrap4TreeviewItem from \"./bootstrap4TreeviewItem.js\";\nimport Bootstrap4TreeviewToggle from \"./bootstrap4TreeviewToggle.js\";\n\n/**\n * An accessible treeview navigation in the DOM.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/treeview/treeview-2/treeview-2a.html\n */\nclass Bootstrap4Treeview extends Treeview {\n  /**\n   * @inheritdoc\n   * @param {object}                  options                             - The options for generating the menu.\n   * @param {HTMLElement}             options.menuElement                 - The menu element in the DOM.\n   * @param {string}                  [options.menuItemSelector = li]     - The CSS selector string for menu items.\n   * @param {string}                  [options.menuLinkSelector = a]      - The CSS selector string for menu links.\n   * @param {string}                  [options.submenuItemSelector = \"\"]  - The CSS selector string for menu items containing submenus.\n   * @param {string}                  [options.submenuToggleSelector = a] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                  [options.submenuSelector = ul]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}        [options.controllerElement = null]  - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}        [options.containerElement = null]   - The element containing the menu in the DOM.\n   * @param {string|string[]|null}    [options.openClass = show]          - The class to apply when a menu is \"open\".\n   * @param {string|string[]|null}    [options.closeClass = hide]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}                 [options.isTopLevel = false]        - A flag to mark the root menu.\n   * @param {Bootstrap4Treeview|null} [options.parentMenu = null]         - The parent menu to this menu.\n   * @param {string}                  [options.hoverType = off]           - The type of hoverability a menu has.\n   * @param {number}                  [options.hoverDelay = 250]          - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                 [options.initialize = true]         - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n      initialize: true,\n    });\n\n    // Set default class types.\n    this.MenuType = Bootstrap4Treeview;\n    this.MenuItemType = Bootstrap4TreeviewItem;\n    this.MenuToggleType = Bootstrap4TreeviewToggle;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default Bootstrap4Treeview;\n","import Bootstrap4DisclosureMenu from \"./src/bootstrap4DisclosureMenu.js\";\nimport Bootstrap4Menubar from \"./src/bootstrap4Menubar.js\";\nimport Bootstrap4Treeview from \"./src/bootstrap4Treeview.js\";\n\nexport default {\n  Bootstrap4DisclosureMenu,\n  Bootstrap4Menubar,\n  Bootstrap4Treeview,\n};\n"],"names":["isValidInstance","contructor","elements","elementsType","TypeError","key","elementType","name","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","Error","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","validTypes","isTag","tagName","HTMLElement","tag","toLowerCase","check","isEventSupported","event","element","eventProp","BaseMenuToggle","constructor","menuToggleElement","parentElement","controlledMenu","parentMenu","domElements","toggle","parent","menuElements","isOpen","expandEvent","CustomEvent","bubbles","detail","collapseEvent","initialize","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","collapse","show","expand","emit","closeClass","openClass","classList","add","remove","dispatchEvent","open","focusState","preview","close","currentChild","blur","closeSiblings","submenuToggles","closeChildren","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","isController","focus","shouldFocus","keyPress","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","isNaN","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverType","hoverDelay","menuItems","submenuItems","submenus","controller","container","domSelectors","menuLinks","rootMenu","submenuOpenClass","submenuCloseClass","root","focussedChild","state","hover","delay","MenuType","MenuItemType","MenuToggleType","validate","findRootMenu","setDOMElements","createChildElements","selectors","currentEvent","currentMenuItem","setParentChild","updateEvents","index","found","menuItem","focusChild","submenuToggle","setDOMElementType","base","filter","baseElement","baseFilter","selector","from","querySelectorAll","addDOMElementType","clearDOMElementType","toggler","submenu","push","handleFocus","addEventListener","handleClick","startEventType","endEventType","toggleToggle","blurChildren","handleHover","some","focusCurrentChild","setTimeout","handleKeydown","handleKeyup","focusFirstChild","blurCurrentChild","focusLastChild","focusNextChild","focusPreviousChild","focusController","focusContainer","DisclosureMenuItem","DisclosureMenuToggle","DisclosureMenu","optionalKeySupport","optionalSupport","contains","target","submenuKeys","controllerKeys","parentKeys","click","hasOpenChild","Bootstrap4DisclosureMenuItem","Bootstrap4DisclosureMenuToggle","hasAttribute","removeAttribute","Bootstrap4DisclosureMenu","MenubarItem","tabIndex","MenubarToggle","Menubar","altKey","crtlKey","metaKey","modifier","focusNextChildWithCharacter","requestAnimationFrame","previousChildOpen","char","text","textContent","charAt","Bootstrap4MenubarItem","Bootstrap4MenubarToggle","Bootstrap4Menubar","TreeviewItem","TreeviewToggle","Treeview","focusNextNodeWithCharacter","focusParentsNextChild","previousMenuItem","focusChildsLastNode","focusLastNode","openChildren","numberOfItems","lastChild","getOpenMenuItems","currentItem","indexOf","sortedMenuItems","ctr","Bootstrap4TreeviewItem","Bootstrap4TreeviewToggle","Bootstrap4Treeview"],"mappings":"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F;;EAED,SAAKgH,mBAAL;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACS,MAAHtG,GAAG,GAAG;EACR,WAAO,KAAKX,WAAZ;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACe,MAATkH,SAAS,GAAG;EACd,WAAO,KAAKjB,YAAZ;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACc,MAARhJ,QAAQ,GAAG;EACb,WAAO,KAAKkD,YAAZ;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;;;EACe,MAAT+B,SAAS,GAAG;EACd,WAAO,KAAKuD,UAAL,GACH,KAAKW,gBADF,GAEH,KAAKnJ,QAAL,CAAckJ,QAAd,CAAuBjE,SAF3B;EAGD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;;;EACgB,MAAVD,UAAU,GAAG;EACf,WAAO,KAAKwD,UAAL,GACH,KAAKY,iBADF,GAEH,KAAKpJ,QAAL,CAAckJ,QAAd,CAAuBlE,UAF3B;EAGD;EAED;EACF;EACA;EACA;EACA;;;EACgB,MAAVwD,UAAU,GAAG;EACf,WAAO,KAAKa,IAAZ;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACkB,MAAZ3D,YAAY,GAAG;EACjB,WAAO,KAAK4D,aAAZ;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;;EACgB,MAAV/D,UAAU,GAAG;EACf,WAAO,KAAKgE,KAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;;EACkB,MAAZW,YAAY,GAAG;EACjB,WAAO,KAAK5H,KAAZ;EACD;EAED;EACF;EACA;EACA;EACA;;;EACqB,MAAf6H,eAAe,GAAG;EACpB,WAAO,KAAKnK,QAAL,CAAc2I,SAAd,CAAwB,KAAKjD,YAA7B,CAAP;EACD;EAED;EACF;EACA;EACA;EACA;EACA;EACA;EACA;;;EACe,MAAT+C,SAAS,GAAG;EACd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"}