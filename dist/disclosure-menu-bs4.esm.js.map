{"version":3,"file":"disclosure-menu-bs4.esm.js","sources":["../node_modules/accessible-menu/src/validate.js","../node_modules/accessible-menu/src/_baseMenuToggle.js","../node_modules/accessible-menu/src/_baseMenuItem.js","../node_modules/accessible-menu/src/eventHandlers.js","../node_modules/accessible-menu/src/_baseMenu.js","../node_modules/accessible-menu/src/disclosureMenuItem.js","../node_modules/accessible-menu/src/disclosureMenuToggle.js","../node_modules/accessible-menu/src/disclosureMenu.js","../src/bootstrap4DisclosureMenuItem.js","../src/bootstrap4DisclosureMenuToggle.js","../src/bootstrap4DisclosureMenu.js"],"sourcesContent":["/**\n * Check to see if the provided elements have a specific contructor.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking instanceof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} contructor - The constructor to check for.\n * @param   {object} elements   - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidInstance(contructor, elements) {\n  try {\n    if (typeof elements !== \"object\") {\n      const elementsType = typeof elements;\n\n      throw new TypeError(\n        `AccessibleMenu: Elements given to isValidInstance() must be inside of an object. ${elementsType} given.`\n      );\n    }\n\n    for (const key in elements) {\n      if (!(elements[key] instanceof contructor)) {\n        const elementType = typeof elements[key];\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be an instance of ${contructor.name}. ${elementType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are of a specific type.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * This is essentially just a wrapper function around checking typeof with\n * more descriptive error message to help debugging.\n *\n * Will return true is the check is successful.\n *\n * @param   {string} type   - The type to check for.\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidType(type, values) {\n  try {\n    if (typeof values !== \"object\") {\n      const valuesType = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidType() must be inside of an object. ${valuesType} given.`\n      );\n    }\n\n    for (const key in values) {\n      const valueType = typeof values[key];\n\n      if (valueType !== type) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a ${type}. ${valueType} given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided values are valid CSS selectors.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isCSSSelector(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isCSSSelector() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      try {\n        if (values[key] === null) {\n          throw new Error();\n        }\n\n        document.querySelector(values[key]);\n      } catch (error) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be a valid CSS selector. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided value is either a string or an array of strings.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidClassList(values) {\n  try {\n    if (typeof values !== \"object\" || Array.isArray(values)) {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidClassList() must be inside of an object. ${type} given.`\n      );\n    }\n\n    for (const key in values) {\n      const type = typeof values[key];\n\n      if (type !== \"string\") {\n        if (Array.isArray(values[key])) {\n          values[key].forEach((value) => {\n            if (typeof value !== \"string\") {\n              throw new TypeError(\n                `AccessibleMenu: ${key} must be a string or an array of strings. An array containing non-strings given.`\n              );\n            }\n          });\n        } else {\n          throw new TypeError(\n            `AccessibleMenu: ${key} must be a string or an array of strings. ${type} given.`\n          );\n        }\n      } else {\n        const obj = {};\n        obj[key] = values[key];\n\n        isCSSSelector(obj);\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid focus states for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidState(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidState() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validStates = [\"none\", \"self\", \"child\"];\n\n    for (const key in values) {\n      if (!validStates.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validStates.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid event types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidEvent(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidEvent() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validEvents = [\"none\", \"mouse\", \"keyboard\", \"character\"];\n\n    for (const key in values) {\n      if (!validEvents.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validEvents.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Check to see if the provided values are valid hover types for a menu.\n *\n * The values must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * Will return true is the check is successful.\n *\n * @param   {object} values - The value(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isValidHoverType(values) {\n  try {\n    if (typeof values !== \"object\") {\n      const type = typeof values;\n\n      throw new TypeError(\n        `AccessibleMenu: Values given to isValidHoverType() must be inside of an object. ${type} given.`\n      );\n    }\n\n    const validTypes = [\"off\", \"on\", \"dynamic\"];\n\n    for (const key in values) {\n      if (!validTypes.includes(values[key])) {\n        throw new TypeError(\n          `AccessibleMenu: ${key} must be one of the following values: ${validTypes.join(\n            \", \"\n          )}. \"${values[key]}\" given.`\n        );\n      }\n    }\n\n    return true;\n  } catch (error) {\n    console.error(error);\n    return false;\n  }\n}\n\n/**\n * Checks to see if the provided elements are using a specific tag.\n *\n * The elements must be provided inside of an object\n * so the variable name can be retrieved in case of errors.\n *\n * @param   {string} tagName  - The name of the tag.\n * @param   {object} elements - The element(s) to check.\n *\n * @returns {boolean} - The result of the check.\n */\nexport function isTag(tagName, elements) {\n  if (\n    isValidType(\"string\", { tagName }) &&\n    isValidInstance(HTMLElement, elements)\n  ) {\n    const tag = tagName.toLowerCase();\n    let check = true;\n\n    for (const key in elements) {\n      if (elements[key].tagName.toLowerCase() !== tag) check = false;\n    }\n\n    return check;\n  } else {\n    return false;\n  }\n}\n\n/**\n * Checks to see if an event is supported by a node.\n *\n * @param   {string}      event   - The event type.\n * @param   {HTMLElement} element - The element to check.\n *\n * @returns {boolean} - The result.\n */\nexport function isEventSupported(event, element) {\n  if (\n    isValidType(\"string\", { event }) &&\n    isValidInstance(HTMLElement, { element })\n  ) {\n    const eventProp = `on${event}`;\n\n    return typeof element[eventProp] !== \"undefined\";\n  } else {\n    return false;\n  }\n}\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport { isTag, isValidType } from \"./validate.js\";\n\n/*\n * A link or button that controls the visibility of a Menu.\n */\nclass BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}        param0                     - The menu toggle object.\n   * @param {HTMLElement}   param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}   param0.parentElement       - The element containing the controlled menu.\n   * @param {BaseMenu}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {BaseMenu|null} [param0.parentMenu = null] - The menu containing this toggle.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n  }) {\n    this.domElements = {\n      toggle: menuToggleElement,\n      parent: parentElement,\n    };\n    this.menuElements = {\n      controlledMenu,\n      parentMenu,\n    };\n    this.isOpen = false;\n\n    this.expandEvent = new CustomEvent(\"accessibleMenuExpand\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n    this.collapseEvent = new CustomEvent(\"accessibleMenuCollapse\", {\n      bubbles: true,\n      detail: { toggle: this },\n    });\n\n    this.initialize();\n  }\n\n  /**\n   * Initialize the toggle by ensuring WAI-ARIA values are set,\n   * handling click events, and adding new keydown events.\n   */\n  initialize() {\n    // Add WAI-ARIA properties.\n    this.dom.toggle.setAttribute(\"aria-haspopup\", \"true\");\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // If the toggle element is a button, there's no need to add a role.\n    if (!isTag(\"button\", { toggle: this.dom.toggle })) {\n      this.dom.toggle.setAttribute(\"role\", \"button\");\n    }\n\n    // Ensure both toggle and menu have IDs.\n    if (\n      this.dom.toggle.id === \"\" ||\n      this.elements.controlledMenu.dom.menu.id === \"\"\n    ) {\n      const randomString = Math.random()\n        .toString(36)\n        .replace(/[^a-z]+/g, \"\")\n        .substr(0, 10);\n\n      let id = this.dom.toggle.innerText.replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      let finalID = randomString;\n\n      if (\n        !id.replace(/\\s/g, \"\").length &&\n        this.dom.toggle.getAttribute(\"aria-label\")\n      ) {\n        id = this.dom.toggle\n          .getAttribute(\"aria-label\")\n          .replace(/[^a-zA-Z0-9\\s]/g, \"\");\n      }\n\n      if (id.replace(/\\s/g, \"\").length > 0) {\n        id = id.toLowerCase().replace(/\\s+/g, \"-\");\n\n        if (id.startsWith(\"-\")) {\n          id = id.substring(1);\n        }\n\n        if (id.endsWith(\"-\")) {\n          id = id.slice(0, -1);\n        }\n\n        finalID = `${id}-${finalID}`;\n      }\n\n      this.dom.toggle.id = this.dom.toggle.id || `${finalID}-menu-button`;\n      this.elements.controlledMenu.dom.menu.id =\n        this.elements.controlledMenu.dom.menu.id || `${finalID}-menu`;\n    }\n\n    // Set up proper aria label and control.\n    this.elements.controlledMenu.dom.menu.setAttribute(\n      \"aria-labelledby\",\n      this.dom.toggle.id\n    );\n    this.dom.toggle.setAttribute(\n      \"aria-controls\",\n      this.elements.controlledMenu.dom.menu.id\n    );\n\n    // Make sure the menu is collapsed on initialization, but do not emit the collapse event.\n    this.collapse(false);\n  }\n\n  /**\n   * The DOM elements within the toggle.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the toggle.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The open state on the menu.\n   *\n   * @returns {boolean} - The open state.\n   */\n  get isOpen() {\n    return this.show;\n  }\n\n  /**\n   * Set the open state on the menu.\n   *\n   * @param {boolean} value - The open state.\n   */\n  set isOpen(value) {\n    isValidType(\"boolean\", { value });\n\n    this.show = value;\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      if (typeof closeClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.add(closeClass);\n      } else if (Array.isArray(closeClass)) {\n        closeClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.add(value);\n        });\n      }\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      if (typeof openClass === \"string\") {\n        this.elements.controlledMenu.dom.menu.classList.remove(openClass);\n      } else if (Array.isArray(openClass)) {\n        openClass.forEach((value) => {\n          this.elements.controlledMenu.dom.menu.classList.remove(value);\n        });\n      }\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.collapseEvent);\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   */\n  open() {\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"child\";\n    }\n\n    this.elements.controlledMenu.focusState = \"self\";\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   */\n  preview() {\n    // Set proper focus states to parent & child.\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.focusState = \"self\";\n    }\n\n    this.elements.controlledMenu.focusState = \"none\";\n\n    // Expand the controlled menu.\n    this.expand();\n\n    // Set the open flag.\n    this.isOpen = true;\n  }\n\n  /**\n   * Closes the controlled menu.\n   */\n  close() {\n    if (this.isOpen) {\n      // Reset controlled menu.\n      this.elements.controlledMenu.currentChild = 0;\n      this.elements.controlledMenu.blur();\n\n      // Set proper focus states to parent & child.\n      if (this.elements.parentMenu) {\n        this.elements.parentMenu.focusState = \"self\";\n      }\n\n      this.elements.controlledMenu.focusState = \"none\";\n\n      // Collapse the controlled menu.\n      this.collapse();\n\n      // Set the open flag.\n      this.isOpen = false;\n    }\n  }\n\n  /**\n   * Toggles the open state of the controlled menu.\n   */\n  toggle() {\n    if (this.isOpen) {\n      this.close();\n    } else {\n      this.open();\n    }\n  }\n\n  /**\n   * Closes all sibling menus.\n   */\n  closeSiblings() {\n    if (this.elements.parentMenu) {\n      this.elements.parentMenu.elements.submenuToggles.forEach((toggle) => {\n        if (toggle !== this) toggle.close();\n      });\n    }\n  }\n\n  /**\n   * Closes all child menus.\n   */\n  closeChildren() {\n    this.elements.controlledMenu.elements.submenuToggles.forEach((toggle) =>\n      toggle.close()\n    );\n  }\n}\n\nexport default BaseMenuToggle;\n","/* eslint-disable jsdoc/no-undefined-types */\n\n/**\n * A basic navigation link contained inside of a Menu.\n */\nclass BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                         - The menu item object.\n   * @param {HTMLElement}         param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}         param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {BaseMenu}            param0.parentMenu              - The parent menu.\n   * @param {boolean}             [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {BaseMenu|null}       [param0.childMenu = null]      - The child menu.\n   * @param {BaseMenuToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n  }) {\n    this.domElements = {\n      item: menuItemElement,\n      link: menuLinkElement,\n    };\n    this.menuElements = {\n      parentMenu,\n      childMenu,\n      toggle,\n    };\n    this.isController = isSubmenuItem;\n  }\n\n  /**\n   * Initialize the menu item.\n   */\n  initialize() {}\n\n  /**\n   * The DOM elements within the menu item.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The elements within the menu item.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * A flag marking a submenu item.\n   *\n   * @returns {boolean} - The submenu flag.\n   */\n  get isSubmenuItem() {\n    return this.isController;\n  }\n\n  /**\n   * Focuses the menu item's link if triggering event is valid.\n   */\n  focus() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.focus();\n    }\n  }\n\n  /**\n   * Blurs the menu item's link if triggering event is valid.\n   */\n  blur() {\n    if (this.elements.parentMenu.shouldFocus) {\n      this.dom.link.blur();\n    }\n  }\n}\n\nexport default BaseMenuItem;\n","/**\n * Retrieves the pressed key from an event.\n *\n * @param   {KeyboardEvent} event - The keyboard event.\n *\n * @returns {string} - The name of the key or an empty string.\n */\nexport function keyPress(event) {\n  try {\n    // Use event.key or event.keyCode to support older browsers.\n    const key = event.key || event.keyCode;\n    const keys = {\n      Enter: key === \"Enter\" || key === 13,\n      Space: key === \" \" || key === \"Spacebar\" || key === 32,\n      Escape: key === \"Escape\" || key === \"Esc\" || key === 27,\n      ArrowUp: key === \"ArrowUp\" || key === \"Up\" || key === 38,\n      ArrowRight: key === \"ArrowRight\" || key === \"Right\" || key === 39,\n      ArrowDown: key === \"ArrowDown\" || key === \"Down\" || key === 40,\n      ArrowLeft: key === \"ArrowLeft\" || key === \"Left\" || key === 37,\n      Home: key === \"Home\" || key === 36,\n      End: key === \"End\" || key === 35,\n      Character: isNaN(key) && !!key.match(/^[a-zA-Z]{1}$/),\n      Tab: key === \"Tab\" || key === 9,\n      Asterisk: key === \"*\" || key === 56,\n    };\n\n    return Object.keys(keys).find((key) => keys[key] === true) || \"\";\n  } catch (error) {\n    // Return an empty string if something goes wrong.\n    return \"\";\n  }\n}\n\n/**\n * Stops an event from taking action.\n *\n * @param {Event} event - The event.\n */\nexport function preventEvent(event) {\n  event.preventDefault();\n  event.stopPropagation();\n}\n","import BaseMenuToggle from \"./_baseMenuToggle.js\";\nimport BaseMenuItem from \"./_baseMenuItem.js\";\nimport {\n  isValidInstance,\n  isValidType,\n  isCSSSelector,\n  isValidClassList,\n  isValidState,\n  isValidEvent,\n  isValidHoverType,\n  isEventSupported,\n} from \"./validate.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\n\n/**\n * An accessible navigation element in the DOM.\n */\nclass BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}               param0                               - The menu object.\n   * @param {HTMLElement}          param0.menuElement                   - The menu element in the DOM.\n   * @param {string}               [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}               [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}               [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}               [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}               [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}     [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}     [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string|string[]|null} [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string|string[]|null} [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}              [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {BaseMenu|null}        [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}               [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}               [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n  }) {\n    this.domElements = {\n      menu: menuElement,\n      menuItems: [],\n      submenuItems: [],\n      submenuToggles: [],\n      submenus: [],\n      controller: controllerElement,\n      container: containerElement,\n    };\n    this.domSelectors = {\n      menuItems: menuItemSelector,\n      menuLinks: menuLinkSelector,\n      submenuItems: submenuItemSelector,\n      submenuToggles: submenuToggleSelector,\n      submenus: submenuSelector,\n    };\n    this.menuElements = {\n      menuItems: [],\n      submenuToggles: [],\n      controller: null,\n      parentMenu,\n      rootMenu: isTopLevel ? this : null,\n    };\n    this.submenuOpenClass = openClass || \"\";\n    this.submenuCloseClass = closeClass || \"\";\n    this.root = isTopLevel;\n    this.focussedChild = 0;\n    this.state = \"none\";\n    this.event = \"none\";\n    this.hover = hoverType;\n    this.delay = hoverDelay;\n\n    // Set default class types.\n    this.MenuType = BaseMenu;\n    this.MenuItemType = BaseMenuItem;\n    this.MenuToggleType = BaseMenuToggle;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    if (!this.validate()) {\n      throw new Error(\n        \"AccesibleMenu: cannot initialize menu. See other error messaged for more information.\"\n      );\n    }\n\n    const { MenuToggleType } = this;\n\n    // Get the root menu if it doesn't exist.\n    if (this.elements.rootMenu === null) this.findRootMenu(this);\n\n    // Set all of the DOM elements.\n    this.setDOMElements();\n\n    if (this.isTopLevel) {\n      if (this.dom.controller && this.dom.container) {\n        // Create a new BaseMenuToggle to control the menu.\n        const toggle = new MenuToggleType({\n          menuToggleElement: this.dom.controller,\n          parentElement: this.dom.container,\n          controlledMenu: this,\n        });\n\n        this.menuElements.controller = toggle;\n      }\n    }\n\n    this.createChildElements();\n  }\n\n  /**\n   * The DOM elements within the menu.\n   *\n   * @returns {object} - The DOM elements.\n   */\n  get dom() {\n    return this.domElements;\n  }\n\n  /**\n   * The CSS selectors available to the menu.\n   *\n   * @returns {object} - The selectors.\n   */\n  get selectors() {\n    return this.domSelectors;\n  }\n\n  /**\n   * The elements within the menu.\n   *\n   * @returns {object} - The elements.\n   */\n  get elements() {\n    return this.menuElements;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"open\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's open class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get openClass() {\n    return this.isTopLevel\n      ? this.submenuOpenClass\n      : this.elements.rootMenu.openClass;\n  }\n\n  /**\n   * The class(es) to apply when the menu is \"closed\".\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's close class(es).\n   *\n   * @returns {string|string[]} - The class(es).\n   */\n  get closeClass() {\n    return this.isTopLevel\n      ? this.submenuCloseClass\n      : this.elements.rootMenu.closeClass;\n  }\n\n  /**\n   * A flag marking the root menu.\n   *\n   * @returns {boolean} - The top-level flag.\n   */\n  get isTopLevel() {\n    return this.root;\n  }\n\n  /**\n   * The index of the currently selected menu item in the menu.\n   *\n   * @returns {number} - The index.\n   */\n  get currentChild() {\n    return this.focussedChild;\n  }\n\n  /**\n   * The current state of the menu's focus.\n   *\n   * @returns {string} - The state.\n   */\n  get focusState() {\n    return this.state;\n  }\n\n  /**\n   * This last event triggered on the menu.\n   *\n   * @returns {string} - The event type.\n   */\n  get currentEvent() {\n    return this.event;\n  }\n\n  /**\n   * The currently selected menu item.\n   *\n   * @returns {BaseMenuItem} - The menu item.\n   */\n  get currentMenuItem() {\n    return this.elements.menuItems[this.currentChild];\n  }\n\n  /**\n   * The type of hoverability for the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hoverability.\n   *\n   * @returns {string} - The hover type.\n   */\n  get hoverType() {\n    return this.root ? this.hover : this.elements.rootMenu.hoverType;\n  }\n\n  /**\n   * The delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's hover delay.\n   *\n   * @returns {number} - The delay time.\n   */\n  get hoverDelay() {\n    return this.root ? this.delay : this.elements.rootMenu.hoverDelay;\n  }\n\n  /**\n   * A flag to check if the menu's focus methods should _actually_ move the focus in the DOM.\n   *\n   * Will return false unless any of the following criteria are met:\n   * - The menu's currentEvent is \"keyboard\".\n   * - The menu's currentEvent is \"character\".\n   * - The menu's currentEvent is \"mouse\" _and_ the menu's hoverType is \"dynamic\".\n   *\n   * @returns {boolean} - The flag.\n   */\n  get shouldFocus() {\n    let check = false;\n\n    if (this.currentEvent === \"keyboard\" || this.currentEvent === \"character\") {\n      check = true;\n    }\n\n    if (this.currentEvent === \"mouse\" && this.hoverType === \"dynamic\") {\n      check = true;\n    }\n\n    return check;\n  }\n\n  /**\n   * Set the class to apply when the menu is \"open\".\n   *\n   * @param {string} value - The class.\n   */\n  set openClass(value) {\n    isValidClassList({ openClass: value });\n\n    if (this.submenuOpenClass !== value) {\n      this.submenuOpenClass = value;\n    }\n  }\n\n  /**\n   * Set the class to apply when the menu is \"closed\".\n   *\n   * @param {string} value - The class.\n   */\n  set closeClass(value) {\n    isValidClassList({ closeClass: value });\n\n    if (this.submenuCloseClass !== value) {\n      this.submenuCloseClass = value;\n    }\n  }\n\n  /**\n   * Set the index currently selected menu item in the menu.\n   *\n   * - Attempting to set a value < -1 will set the currentChild to -1.\n   * - Attempting to set a value >= the number of menu items will set the currentChild to the number of menu items - 1.\n   *\n   * If the current menu has a parent menu _and_ the menu's current event is \"mouse\",\n   * The parent menu will have it's current child updated as well to help with transitioning\n   * between mouse and keyboard naviation.\n   *\n   * @param {number} value - The index.\n   */\n  set currentChild(value) {\n    isValidType(\"number\", { value });\n\n    /**\n     * Update the parent menu's current child to make sure clicks\n     * and other jumps don't interfere with keyboard navigation.\n     *\n     * @param {BaseMenu} menu - The initial menu.\n     */\n    function setParentChild(menu) {\n      const updateEvents = [\"mouse\", \"character\"];\n\n      if (\n        updateEvents.includes(menu.currentEvent) &&\n        menu.elements.parentMenu\n      ) {\n        let index = 0;\n        let found = false;\n\n        while (\n          !found &&\n          index < menu.elements.parentMenu.elements.menuItems.length\n        ) {\n          const menuItem = menu.elements.parentMenu.elements.menuItems[index];\n\n          if (\n            menuItem.isSubmenuItem &&\n            menuItem.elements.toggle.elements.controlledMenu === menu\n          ) {\n            found = true;\n\n            menu.elements.parentMenu.currentEvent = menu.currentEvent;\n            menu.elements.parentMenu.currentChild = index;\n          }\n\n          index++;\n        }\n      }\n    }\n\n    if (value < -1) {\n      this.focussedChild = -1;\n      setParentChild(this);\n    } else if (value >= this.elements.menuItems.length) {\n      this.focussedChild = this.elements.menuItems.length - 1;\n      setParentChild(this);\n    } else if (this.focusChild !== value) {\n      this.focussedChild = value;\n      setParentChild(this);\n    }\n  }\n\n  /**\n   * Set the state of the menu's focus.\n   *\n   * @param {string} value - The state.\n   */\n  set focusState(value) {\n    isValidState({ value });\n\n    if (this.state !== value) {\n      this.state = value;\n    }\n  }\n\n  /**\n   * Set the last event triggered on the menu.\n   *\n   * @param {string} value - The event type.\n   */\n  set currentEvent(value) {\n    isValidEvent({ value });\n\n    if (this.event !== value) {\n      this.event = value;\n\n      if (this.elements.submenuToggles.length > 0) {\n        this.elements.submenuToggles.forEach((submenuToggle) => {\n          submenuToggle.elements.controlledMenu.currentEvent = value;\n        });\n      }\n    }\n  }\n\n  /**\n   * Set the type of hoverability for the menu.\n   *\n   * @param {string} value - The hover type.\n   */\n  set hoverType(value) {\n    isValidHoverType({ value });\n\n    if (this.hover !== value) {\n      this.hover = value;\n    }\n  }\n\n  /**\n   * Set the delay time (in miliseconds) used for mouseout events to take place.\n   *\n   * @param {number} value - The delay time.\n   */\n  set hoverDelay(value) {\n    isValidType(\"number\", { value });\n\n    if (this.delay !== value) {\n      this.delay = value;\n    }\n  }\n\n  /**\n   * Validates all aspects of the menu to ensure proper functionality.\n   *\n   * @returns {boolean} - The result of the validation.\n   */\n  validate() {\n    const {\n      domElements,\n      domSelectors,\n      menuElements,\n      submenuOpenClass,\n      submenuCloseClass,\n      root,\n      hover,\n      delay,\n    } = this;\n\n    let check = true;\n\n    if (domElements.container !== null || domElements.controller !== null) {\n      if (\n        !isValidInstance(HTMLElement, {\n          menuElement: domElements.menu,\n          controllerElement: domElements.controller,\n          containerElement: domElements.container,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isValidInstance(HTMLElement, {\n        menuElement: domElements.menu,\n      })\n    ) {\n      check = false;\n    }\n\n    if (domSelectors.submenuItems !== \"\") {\n      if (\n        !isCSSSelector({\n          menuItemSelector: domSelectors.menuItems,\n          menuLinkSelector: domSelectors.menuLinks,\n          submenuItemSelector: domSelectors.submenuItems,\n          submenuToggleSelector: domSelectors.submenuToggles,\n          submenuSelector: domSelectors.submenus,\n        })\n      ) {\n        check = false;\n      }\n    } else if (\n      !isCSSSelector({\n        menuItemSelector: domSelectors.menuItems,\n        menuLinkSelector: domSelectors.menuLinks,\n      })\n    ) {\n      check = false;\n    }\n\n    if (\n      submenuOpenClass !== \"\" &&\n      !isValidClassList({ openClass: submenuOpenClass })\n    ) {\n      check = false;\n    }\n\n    if (\n      submenuCloseClass !== \"\" &&\n      !isValidClassList({ closeClass: submenuCloseClass })\n    ) {\n      check = false;\n    }\n\n    if (!isValidType(\"boolean\", { isTopLevel: root })) {\n      check = false;\n    }\n\n    if (\n      menuElements.parentMenu !== null &&\n      !isValidInstance(BaseMenu, { parentMenu: menuElements.parentMenu })\n    ) {\n      check = false;\n    }\n\n    if (!isValidHoverType({ hoverType: hover })) {\n      check = false;\n    }\n\n    if (!isValidType(\"number\", { hoverDelay: delay })) {\n      check = false;\n    }\n\n    return check;\n  }\n\n  /**\n   * Sets DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  setDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = domElements.filter((item) =>\n            filter(item)\n          );\n        } else {\n          this.domElements[elementType] = domElements;\n        }\n      } else {\n        this.domElements[elementType] = domElements.filter((item) =>\n          baseFilter(item)\n        );\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Adds an element to DOM elements within the menu.\n   *\n   * @param {string}      elementType - The type of element to populate.\n   * @param {HTMLElement} base        - The element used as the base for the querySelect.\n   * @param {Function}    filter      - A filter to use to narrow down the DOM elements selected.\n   */\n  addDOMElementType(elementType, base, filter) {\n    if (typeof this.selectors[elementType] === \"string\") {\n      if (base) isValidInstance(HTMLElement, { base });\n\n      const baseElement = base || this.dom.menu;\n      const baseFilter = (item) => item.parentElement === baseElement;\n      const selector = this.selectors[elementType];\n      const domElements = Array.from(baseElement.querySelectorAll(selector));\n\n      if (typeof filter !== \"undefined\") {\n        if (typeof filter === \"function\") {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements.filter((item) => filter(item)),\n          ];\n        } else {\n          this.domElements[elementType] = [\n            ...this.domElements[elementType],\n            ...domElements,\n          ];\n        }\n      } else {\n        this.domElements[elementType] = [\n          ...this.domElements[elementType],\n          ...domElements.filter((item) => baseFilter(item)),\n        ];\n      }\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Clears DOM elements within the menu.\n   *\n   * @param {string} elementType - The type of element to clear.\n   */\n  clearDOMElementType(elementType) {\n    if (elementType === \"menu\") return;\n\n    if (Array.isArray(this.domElements[elementType])) {\n      this.domElements[elementType] = [];\n    } else if (typeof this.domElements[elementType] !== \"undefined\") {\n      this.domElements[elementType] = null;\n    } else {\n      throw new Error(\n        `${elementType} is not a valid element type within the menu.`\n      );\n    }\n  }\n\n  /**\n   * Sets all DOM elements within the menu.\n   */\n  setDOMElements() {\n    this.setDOMElementType(\"menuItems\");\n\n    if (this.selectors.submenuItems !== \"\") {\n      this.setDOMElementType(\"submenuItems\");\n\n      this.clearDOMElementType(\"submenuToggles\");\n      this.clearDOMElementType(\"submenus\");\n\n      this.dom.submenuItems.forEach((item) => {\n        this.addDOMElementType(\"submenuToggles\", item);\n        this.addDOMElementType(\"submenus\", item);\n      });\n    }\n  }\n\n  /**\n   * Finds the root menu element.\n   *\n   * @param {BaseMenu} menu - The menu to check.\n   */\n  findRootMenu(menu) {\n    if (menu.isTopLevel) {\n      this.menuElements.rootMenu = menu;\n    } else if (menu.elements.parentMenu !== null) {\n      this.findRootMenu(menu.elements.parentMenu);\n    } else {\n      throw new Error(\"Cannot find root menu.\");\n    }\n  }\n\n  /**\n   * Creates and initializes all menu items and submenus.\n   */\n  createChildElements() {\n    const { MenuType, MenuItemType, MenuToggleType } = this;\n\n    this.dom.menuItems.forEach((element) => {\n      let menuItem;\n\n      if (this.dom.submenuItems.includes(element)) {\n        // The menu's toggle controller DOM element.\n        const toggler = element.querySelector(this.selectors.submenuToggles);\n        // The actual menu DOM element.\n        const submenu = element.querySelector(this.selectors.submenus);\n\n        // Create the new menu and initialize it.\n        const menu = new MenuType({\n          menuElement: submenu,\n          menuItemSelector: this.selectors.menuItems,\n          menuLinkSelector: this.selectors.menuLinks,\n          submenuItemSelector: this.selectors.submenuItems,\n          submenuToggleSelector: this.selectors.submenuToggles,\n          submenuSelector: this.selectors.submenus,\n          openClass: this.openClass,\n          closeClass: this.closeClass,\n          isTopLevel: false,\n          parentMenu: this,\n          hoverType: this.hoverType,\n          hoverDelay: this.hoverDelay,\n        });\n\n        // Create the new menu toggle.\n        const toggle = new MenuToggleType({\n          menuToggleElement: toggler,\n          parentElement: element,\n          controlledMenu: menu,\n          parentMenu: this,\n        });\n\n        // Add the toggle to the list of toggles.\n        this.menuElements.submenuToggles.push(toggle);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: toggler,\n          parentMenu: this,\n          isSubmenuItem: true,\n          childMenu: menu,\n          toggle,\n        });\n      } else {\n        const link = element.querySelector(this.selectors.menuLinks);\n\n        // Create a new menu item.\n        menuItem = new MenuItemType({\n          menuItemElement: element,\n          menuLinkElement: link,\n          parentMenu: this,\n        });\n      }\n\n      this.menuElements.menuItems.push(menuItem);\n    });\n  }\n\n  /**\n   * Handles focus events throughout the menu for proper menu use.\n   */\n  handleFocus() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"focus\", () => {\n        if (this.elements.parentMenu)\n          this.elements.parentMenu.focusState = \"child\";\n        if (menuItem.elements.childMenu)\n          menuItem.elements.childMenu.focusState = \"none\";\n\n        this.focusState = \"self\";\n        this.currentChild = index;\n      });\n    });\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   */\n  handleClick() {\n    // Use touch over mouse events when supported.\n    const startEventType = isEventSupported(\"touchstart\", this.dom.menu)\n      ? \"touchstart\"\n      : \"mousedown\";\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    /**\n     * Toggles a toggle element.\n     *\n     * @param {BaseMenu}       menu   - This menu.\n     * @param {BaseMenuToggle} toggle - The menu toggle\n     * @param {Event}          event  - A Javascript event.\n     */\n    function toggleToggle(menu, toggle, event) {\n      preventEvent(event);\n\n      toggle.toggle();\n\n      if (toggle.isOpen) {\n        menu.focusState = \"self\";\n        toggle.elements.controlledMenu.focusState = \"none\";\n      }\n    }\n\n    this.elements.menuItems.forEach((item, index) => {\n      // Properly focus the current menu item.\n      item.dom.link.addEventListener(startEventType, () => {\n        this.currentEvent = \"mouse\";\n        this.elements.rootMenu.blurChildren();\n        this.focusChild(index);\n      });\n\n      // Properly toggle submenus open and closed.\n      if (item.isSubmenuItem) {\n        item.elements.toggle.dom.toggle[`on${endEventType}`] = (event) => {\n          this.currentEvent = \"mouse\";\n          toggleToggle(this, item.elements.toggle, event);\n        };\n      }\n    });\n\n    // Open the this menu if it's controller is clicked.\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle[`on${endEventType}`] = (event) => {\n        this.currentEvent = \"mouse\";\n        toggleToggle(this, this.elements.controller, event);\n      };\n    }\n  }\n\n  /**\n   * Handles hover events throughout the menu for proper use.\n   */\n  handleHover() {\n    this.elements.menuItems.forEach((menuItem, index) => {\n      menuItem.dom.link.addEventListener(\"mouseenter\", () => {\n        if (this.hoverType === \"on\") {\n          this.currentEvent = \"mouse\";\n          this.currentChild = index;\n\n          if (menuItem.isSubmenuItem) {\n            menuItem.elements.toggle.preview();\n          }\n        } else if (this.hoverType === \"dynamic\") {\n          const isOpen = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n          this.currentChild = index;\n\n          if (!this.isTopLevel || this.focusState !== \"none\") {\n            this.currentEvent = \"mouse\";\n            this.focusCurrentChild();\n          }\n\n          if (menuItem.isSubmenuItem && (!this.isTopLevel || isOpen)) {\n            this.currentEvent = \"mouse\";\n            menuItem.elements.toggle.preview();\n          }\n        }\n      });\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.dom.item.addEventListener(\"mouseleave\", () => {\n          if (this.hoverType === \"on\") {\n            setTimeout(() => {\n              this.currentEvent = \"mouse\";\n              menuItem.elements.toggle.close();\n            }, this.hoverDelay);\n          } else if (this.hoverType === \"dynamic\") {\n            if (!this.isTopLevel) {\n              setTimeout(() => {\n                this.currentEvent = \"mouse\";\n                menuItem.elements.toggle.close();\n                this.focusCurrentChild();\n              }, this.hoverDelay);\n            }\n          }\n        });\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\n        \"keydown\",\n        (event) => {\n          this.currentEvent = \"keyboard\";\n\n          const key = keyPress(event);\n\n          if (key === \"Space\" || key === \"Enter\") {\n            preventEvent(event);\n          }\n        }\n      );\n    }\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    if (this.isTopLevel && this.elements.controller) {\n      this.elements.controller.dom.toggle.addEventListener(\"keyup\", (event) => {\n        this.currentEvent = \"keyboard\";\n\n        const key = keyPress(event);\n\n        if (key === \"Space\" || key === \"Enter\") {\n          preventEvent(event);\n          this.elements.controller.open();\n          this.focusFirstChild();\n        }\n      });\n    }\n  }\n\n  /**\n   * Focus the menu.\n   */\n  focus() {\n    this.focusState = \"self\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.focus();\n    }\n  }\n\n  /**\n   * Unfocus the menu.\n   */\n  blur() {\n    this.focusState = \"none\";\n\n    if (this.shouldFocus) {\n      this.dom.menu.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's current child.\n   */\n  focusCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.focus();\n    }\n  }\n\n  /**\n   * Focuses the menu's child at a given index.\n   *\n   * @param {number} index - The index of the child to focus.\n   */\n  focusChild(index) {\n    this.blurCurrentChild();\n    this.currentChild = index;\n    this.focusCurrentChild();\n  }\n\n  /**\n   * Focues the menu's first child.\n   */\n  focusFirstChild() {\n    this.focusChild(0);\n  }\n\n  /**\n   * Focus the menu's last child.\n   */\n  focusLastChild() {\n    this.focusChild(this.elements.menuItems.length - 1);\n  }\n\n  /**\n   * Focus the menu's next child.\n   */\n  focusNextChild() {\n    if (this.currentChild < this.elements.menuItems.length - 1) {\n      this.focusChild(this.currentChild + 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Focus the menu's previous child.\n   */\n  focusPreviousChild() {\n    if (this.currentChild > 0) {\n      this.focusChild(this.currentChild - 1);\n    } else {\n      this.focusCurrentChild();\n    }\n  }\n\n  /**\n   * Blurs the menu's current child.\n   */\n  blurCurrentChild() {\n    if (this.currentChild !== -1) {\n      this.currentMenuItem.blur();\n    }\n  }\n\n  /**\n   * Focus the menu's controller.\n   */\n  focusController() {\n    if (this.dom.controller) {\n      if (this.shouldFocus) {\n        this.dom.controller.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Focus the menu's container.\n   */\n  focusContainer() {\n    if (this.dom.container) {\n      if (this.shouldFocus) {\n        this.dom.container.focus();\n      }\n\n      this.focusState = \"none\";\n    }\n  }\n\n  /**\n   * Close all submenu children.\n   */\n  closeChildren() {\n    this.elements.submenuToggles.forEach((toggle) => toggle.close());\n  }\n\n  /**\n   * Blurs all children and submenu's children.\n   */\n  blurChildren() {\n    this.elements.menuItems.forEach((menuItem) => {\n      menuItem.blur();\n\n      if (menuItem.isSubmenuItem) {\n        menuItem.elements.childMenu.blurChildren();\n      }\n    });\n  }\n}\n\nexport default BaseMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuItem from \"./_baseMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a DisclosureMenu.\n */\nclass DisclosureMenuItem extends BaseMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                    param0                         - The menu item object.\n   * @param {HTMLElement}               param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}               param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {DisclosureMenu}            param0.parentMenu              - The parent menu.\n   * @param {boolean}                   [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {DisclosureMenu|null}       [param0.childMenu = null]      - The child menu.\n   * @param {DisclosureMenuToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                   [param0.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default DisclosureMenuItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport BaseMenuToggle from \"./_baseMenuToggle.js\";\n\n/*\n * A link or button that controls the visibility of a DisclosureMenu.\n */\nclass DisclosureMenuToggle extends BaseMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                     - The menu toggle object.\n   * @param {HTMLElement}         param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}         param0.parentElement       - The element containing the controlled menu.\n   * @param {DisclosureMenu}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {DisclosureMenu|null} [param0.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}             [param0.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Opens the controlled menu.\n   */\n  open() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.open();\n  }\n\n  /**\n   * Opens the controlled menu without the current focus entering it.\n   */\n  preview() {\n    // Close all siblings.\n    this.closeSiblings();\n\n    super.preview();\n  }\n\n  /**\n   * Closes the controlled menu.\n   */\n  close() {\n    if (this.isOpen) {\n      // Close all children.\n      this.closeChildren();\n    }\n\n    super.close();\n  }\n}\n\nexport default DisclosureMenuToggle;\n","import BaseMenu from \"./_baseMenu.js\";\nimport DisclosureMenuItem from \"./disclosureMenuItem.js\";\nimport DisclosureMenuToggle from \"./disclosureMenuToggle.js\";\nimport { preventEvent, keyPress } from \"./eventHandlers.js\";\nimport { isValidType, isEventSupported } from \"./validate.js\";\n\n/**\n * An accessible disclosure menu in the DOM.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html\n */\nclass DisclosureMenu extends BaseMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}              param0                               - The menu object.\n   * @param {HTMLElement}         param0.menuElement                   - The menu element in the DOM.\n   * @param {string}              [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}              [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}              [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}              [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}              [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}    [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}    [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string}              [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string}              [param0.closeClass = \"hide\"]         - The class to apply when a menu is \"closed\".\n   * @param {boolean}             [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {DisclosureMenu|null} [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}              [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}              [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}             [param0.optionalKeySupport = false]  - A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   * @param {boolean}             [param0.initialize = true]           - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"hide\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    optionalKeySupport = false,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n    });\n\n    // Set default class types.\n    this.MenuType = DisclosureMenu;\n    this.MenuItemType = DisclosureMenuItem;\n    this.MenuToggleType = DisclosureMenuToggle;\n\n    this.currentChild = -1;\n    this.optionalKeySupport = optionalKeySupport;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   *\n   * This functions differently for root vs. submenus.\n   * Submenus will always inherit their root menu's optionalKeySupport.\n   *\n   * @returns {boolean} - The flag.\n   */\n  get optionalKeySupport() {\n    return this.isTopLevel\n      ? this.optionalSupport\n      : this.elements.rootMenu.optionalKeySupport;\n  }\n\n  /**\n   * Set the flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   *\n   * @param {boolean} value - The flag.\n   */\n  set optionalKeySupport(value) {\n    isValidType(\"boolean\", { optionalKeySupport: value });\n\n    this.optionalSupport = value;\n  }\n\n  /**\n   * Initializes the menu.\n   *\n   * This will also initialize all menu items and sub menus.\n   */\n  initialize() {\n    try {\n      super.initialize();\n\n      this.handleFocus();\n      this.handleClick();\n      this.handleHover();\n      this.handleKeydown();\n      this.handleKeyup();\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  /**\n   * Handles click events throughout the menu for proper use.\n   */\n  handleClick() {\n    super.handleClick();\n\n    // Use touch over mouse events when supported.\n    const endEventType = isEventSupported(\"touchend\", this.dom.menu)\n      ? \"touchend\"\n      : \"mouseup\";\n\n    // Close the menu if a click event happens outside of it.\n    document.addEventListener(endEventType, (event) => {\n      if (this.focusState !== \"none\") {\n        this.currentEvent = \"mouse\";\n\n        if (\n          !this.dom.menu.contains(event.target) &&\n          !this.dom.menu !== event.target\n        ) {\n          this.closeChildren();\n          this.blur();\n\n          if (this.elements.controller) {\n            this.elements.controller.close();\n          }\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keydown events throughout the menu for proper menu use.\n   */\n  handleKeydown() {\n    super.handleKeydown();\n\n    this.dom.menu.addEventListener(\"keydown\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      // Prevent default event actions if we're handling the keyup event.\n      if (this.focusState === \"self\") {\n        const submenuKeys = [\"Space\", \"Enter\"];\n        const controllerKeys = [\"Escape\"];\n        const parentKeys = [\"Escape\"];\n\n        if (this.optionalKeySupport) {\n          const keys = [\n            \"ArrowUp\",\n            \"ArrowRight\",\n            \"ArrowDown\",\n            \"ArrowLeft\",\n            \"Home\",\n            \"End\",\n          ];\n          if (keys.includes(key)) {\n            preventEvent(event);\n          }\n        } else if (\n          this.currentMenuItem.isSubmenuItem &&\n          submenuKeys.includes(key)\n        ) {\n          preventEvent(event);\n        } else if (this.elements.controller && controllerKeys.includes(key)) {\n          preventEvent(event);\n        } else if (this.elements.parentMenu && parentKeys.includes(key)) {\n          preventEvent(event);\n        }\n      }\n    });\n  }\n\n  /**\n   * Handles keyup events throughout the menu for proper menu use.\n   */\n  handleKeyup() {\n    super.handleKeyup();\n\n    this.dom.menu.addEventListener(\"keyup\", (event) => {\n      this.currentEvent = \"keyboard\";\n\n      const key = keyPress(event);\n\n      if (this.focusState === \"self\") {\n        if (key === \"Space\" || key === \"Enter\") {\n          // Hitting Space or Enter:\n          // - If focus is on a disclosure button, activates the button, which toggles the visibility of the dropdown.\n          if (this.currentMenuItem.isSubmenuItem) {\n            preventEvent(event);\n            this.currentMenuItem.elements.toggle.preview();\n          } else {\n            this.currentMenuItem.dom.link.click();\n          }\n        } else if (key === \"Escape\") {\n          // Hitting Escape\n          // - If a dropdown is open, closes it.\n          // - If was within the closed dropdown, sets focus on the button that controls that dropdown.\n          const hasOpenChild = this.elements.submenuToggles.some(\n            (toggle) => toggle.isOpen\n          );\n\n          if (hasOpenChild) {\n            preventEvent(event);\n            this.closeChildren();\n          } else if (this.elements.parentMenu) {\n            preventEvent(event);\n            this.elements.parentMenu.currentEvent = this.currentEvent;\n            this.elements.parentMenu.closeChildren();\n            this.elements.parentMenu.focusCurrentChild();\n          } else if (\n            this.isTopLevel &&\n            this.elements.controller &&\n            this.elements.controller.isOpen\n          ) {\n            this.elements.controller.close();\n            this.focusController();\n          }\n        } else if (this.optionalKeySupport) {\n          if (key === \"ArrowDown\" || key === \"ArrowRight\") {\n            // Hitting the Down or Right Arrow:\n            // - If focus is on a button and its dropdown is collapsed, and it is not the last button, moves focus to the next button.\n            // - If focus is on a button and its dropdown is expanded, moves focus to the first link in the dropdown.\n            // - If focus is on a link, and it is not the last link, moves focus to the next link.\n            preventEvent(event);\n\n            if (\n              this.currentMenuItem.isSubmenuItem &&\n              this.currentMenuItem.elements.toggle.isOpen\n            ) {\n              this.currentMenuItem.elements.childMenu.currentEvent = \"keyboard\";\n              this.currentMenuItem.elements.childMenu.focusFirstChild();\n            } else {\n              this.focusNextChild();\n            }\n          } else if (key === \"ArrowUp\" || key === \"ArrowLeft\") {\n            // Hitting the Up or Left Arrow:\n            // - If focus is on a button, and it is not the first button, moves focus to the previous button.\n            // - If focus is on a link, and it is not the first link, moves focus to the previous link.\n            preventEvent(event);\n            this.focusPreviousChild();\n          } else if (key === \"Home\") {\n            // Hitting Home:\n            // - If focus is on a button, and it is not the first button, moves focus to the first button.\n            // - If focus is on a link, and it is not the first link, moves focus to the first link.\n            preventEvent(event);\n            this.focusFirstChild();\n          } else if (key === \"End\") {\n            // Hitting End:\n            // - If focus is on a button, and it is not the last button, moves focus to the last button.\n            // - If focus is on a link, and it is not the last link, moves focus to the last link.\n            preventEvent(event);\n            this.focusLastChild();\n          }\n        }\n      }\n    });\n  }\n}\n\nexport default DisclosureMenu;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport DisclosureMenuItem from \"accessible-menu/src/disclosureMenuItem.js\";\n\n/**\n * A basic navigation link contained inside of a Bootstrap4DisclosureMenu.\n */\nclass Bootstrap4DisclosureMenuItem extends DisclosureMenuItem {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                              param0                         - The menu item object.\n   * @param {HTMLElement}                         param0.menuItemElement         - The menu item in the DOM.\n   * @param {HTMLElement}                         param0.menuLinkElement         - The menu item's link in the DOM.\n   * @param {Bootstrap4DisclosureMenu}            param0.parentMenu              - The parent menu.\n   * @param {boolean}                             [param0.isSubmenuItem = false] - A flag to mark if the menu item is controlling a submenu.\n   * @param {Bootstrap4DisclosureMenu|null}       [param0.childMenu = null]      - The child menu.\n   * @param {Bootstrap4DisclosureMenuToggle|null} [param0.toggle = null]         - The controller for the child menu.\n   * @param {boolean}                             [param0.initialize = true]     - A flag to initialize the menu item immediately upon creation.\n   */\n  constructor({\n    menuItemElement,\n    menuLinkElement,\n    parentMenu,\n    isSubmenuItem = false,\n    childMenu = null,\n    toggle = null,\n    initialize = true,\n  }) {\n    super({\n      menuItemElement,\n      menuLinkElement,\n      parentMenu,\n      isSubmenuItem,\n      childMenu,\n      toggle,\n      initialize: false,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default Bootstrap4DisclosureMenuItem;\n","/* eslint-disable jsdoc/no-undefined-types */\n\nimport DisclosureMenuToggle from \"accessible-menu/src/disclosureMenuToggle.js\";\n\n/*\n * A link or button that controls the visibility of a Bootstrap4DisclosureMenu.\n */\nclass Bootstrap4DisclosureMenuToggle extends DisclosureMenuToggle {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                        param0                     - The menu toggle object.\n   * @param {HTMLElement}                   param0.menuToggleElement   - The toggle element in the DOM.\n   * @param {HTMLElement}                   param0.parentElement       - The element containing the controlled menu.\n   * @param {Bootstrap4DisclosureMenu}      param0.controlledMenu      - The menu controlled by this toggle.\n   * @param {Bootstrap4DisclosureMenu|null} [param0.parentMenu = null] - The menu containing this toggle.\n   * @param {boolean}                       [param0.initialize = true] - A flag to initialize the menu toggle immediately upon creation.\n   */\n  constructor({\n    menuToggleElement,\n    parentElement,\n    controlledMenu,\n    parentMenu = null,\n    initialize = true,\n  }) {\n    super({\n      menuToggleElement,\n      parentElement,\n      controlledMenu,\n      parentMenu,\n      initialize: false,\n    });\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n\n  /**\n   * Initializes the toggle by removing the default bootstrap toggle information\n   * and running the parent's initialization.\n   */\n  initialize() {\n    super.initialize();\n\n    this.elements.controlledMenu.dom.container.classList.add(\"collapse\");\n\n    if (this.dom.toggle.hasAttribute(\"data-toggle\")) {\n      this.dom.toggle.removeAttribute(\"data-toggle\");\n    }\n\n    if (this.dom.toggle.hasAttribute(\"data-target\")) {\n      this.dom.toggle.removeAttribute(\"data-target\");\n    }\n  }\n\n  /**\n   * Expands the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the expand event once expanded.\n   */\n  expand(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"true\");\n\n    // Add the open class\n    if (openClass !== \"\") {\n      this.elements.controlledMenu.dom.container.classList.add(openClass);\n    }\n\n    // Remove the close class.\n    if (closeClass !== \"\") {\n      this.elements.controlledMenu.dom.container.classList.remove(closeClass);\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.expandEvent);\n    }\n  }\n\n  /**\n   * Collapses the controlled menu.\n   *\n   * Alters ARIA attributes and classes.\n   *\n   * @param {boolean} [emit = true] - A toggle to emit the collapse event once collapsed.\n   */\n  collapse(emit = true) {\n    const { closeClass, openClass } = this.elements.controlledMenu;\n\n    this.dom.toggle.setAttribute(\"aria-expanded\", \"false\");\n\n    // Add the close class\n    if (closeClass !== \"\") {\n      this.elements.controlledMenu.dom.container.classList.add(closeClass);\n    }\n\n    // Remove the open class.\n    if (openClass !== \"\") {\n      this.elements.controlledMenu.dom.container.classList.remove(openClass);\n    }\n\n    if (emit) {\n      this.dom.toggle.dispatchEvent(this.collapseEvent);\n    }\n  }\n}\n\nexport default Bootstrap4DisclosureMenuToggle;\n","import DisclosureMenu from \"accessible-menu/src/disclosureMenu.js\";\nimport Bootstrap4DisclosureMenuItem from \"./bootstrap4DisclosureMenuItem.js\";\nimport Bootstrap4DisclosureMenuToggle from \"./bootstrap4DisclosureMenuToggle.js\";\n\n/**\n * An accessible disclosure menu in the DOM using Bootstrap 4.\n *\n * See https://www.w3.org/TR/wai-aria-practices-1.2/examples/disclosure/disclosure-navigation.html\n */\nclass Bootstrap4DisclosureMenu extends DisclosureMenu {\n  /**\n   * {@inheritdoc}\n   *\n   * @param {object}                        param0                               - The menu object.\n   * @param {HTMLElement}                   param0.menuElement                   - The menu element in the DOM.\n   * @param {string}                        [param0.menuItemSelector = \"li\"]     - The CSS selector string for menu items.\n   * @param {string}                        [param0.menuLinkSelector = \"a\"]      - The CSS selector string for menu links.\n   * @param {string}                        [param0.submenuItemSelector = \"\"]    - The CSS selector string for menu items containing submenus.\n   * @param {string}                        [param0.submenuToggleSelector = \"a\"] - The CSS selector string for submenu toggle buttons/links.\n   * @param {string}                        [param0.submenuSelector = \"ul\"]      - The CSS selector string for submenus.\n   * @param {HTMLElement|null}              [param0.controllerElement = null]    - The element controlling the menu in the DOM.\n   * @param {HTMLElement|null}              [param0.containerElement = null]     - The element containing the menu in the DOM.\n   * @param {string}                        [param0.openClass = \"show\"]          - The class to apply when a menu is \"open\".\n   * @param {string}                        [param0.closeClass = \"\"]             - The class to apply when a menu is \"closed\".\n   * @param {boolean}                       [param0.isTopLevel = false]          - A flag to mark the root menu.\n   * @param {Bootstrap4DisclosureMenu|null} [param0.parentMenu = null]           - The parent menu to this menu.\n   * @param {string}                        [param0.hoverType = \"off\"]           - The type of hoverability a menu has.\n   * @param {number}                        [param0.hoverDelay = 250]            - The delay for closing menus if the menu is hoverable (in miliseconds).\n   * @param {boolean}                       [param0.optionalKeySupport = false]  - A flag to add optional keyboard support (Arrow keys, Home, and End) to the menu.\n   * @param {boolean}                       [param0.initialize = true]           - A flag to initialize the menu immediately upon creation.\n   */\n  constructor({\n    menuElement,\n    menuItemSelector = \"li\",\n    menuLinkSelector = \"a\",\n    submenuItemSelector = \"\",\n    submenuToggleSelector = \"a\",\n    submenuSelector = \"ul\",\n    controllerElement = null,\n    containerElement = null,\n    openClass = \"show\",\n    closeClass = \"\",\n    isTopLevel = true,\n    parentMenu = null,\n    hoverType = \"off\",\n    hoverDelay = 250,\n    optionalKeySupport = false,\n    initialize = true,\n  }) {\n    super({\n      menuElement,\n      menuItemSelector,\n      menuLinkSelector,\n      submenuItemSelector,\n      submenuToggleSelector,\n      submenuSelector,\n      controllerElement,\n      containerElement,\n      openClass,\n      closeClass,\n      isTopLevel,\n      parentMenu,\n      hoverType,\n      hoverDelay,\n      optionalKeySupport,\n      initialize: false,\n    });\n\n    // Set default class types.\n    this.MenuType = Bootstrap4DisclosureMenu;\n    this.MenuItemType = Bootstrap4DisclosureMenuItem;\n    this.MenuToggleType = Bootstrap4DisclosureMenuToggle;\n\n    if (initialize) {\n      this.initialize();\n    }\n  }\n}\n\nexport default Bootstrap4DisclosureMenu;\n"],"names":["isValidInstance","contructor","elements","elementsType","TypeError","key","elementType","name","error","console","isValidType","type","values","valuesType","valueType","isCSSSelector","Error","document","querySelector","isValidClassList","Array","isArray","forEach","value","obj","isValidState","validStates","includes","join","isValidEvent","validEvents","isValidHoverType","validTypes","isTag","tagName","HTMLElement","tag","toLowerCase","check","isEventSupported","event","element","eventProp","BaseMenuToggle","constructor","menuToggleElement","parentElement","controlledMenu","parentMenu","domElements","toggle","parent","menuElements","isOpen","expandEvent","CustomEvent","bubbles","detail","collapseEvent","initialize","dom","setAttribute","id","menu","randomString","Math","random","toString","replace","substr","innerText","finalID","length","getAttribute","startsWith","substring","endsWith","slice","collapse","show","expand","emit","closeClass","openClass","classList","add","remove","dispatchEvent","open","focusState","preview","close","currentChild","blur","closeSiblings","submenuToggles","closeChildren","BaseMenuItem","menuItemElement","menuLinkElement","isSubmenuItem","childMenu","item","link","isController","focus","shouldFocus","keyPress","keyCode","keys","Enter","Space","Escape","ArrowUp","ArrowRight","ArrowDown","ArrowLeft","Home","End","Character","isNaN","match","Tab","Asterisk","Object","find","preventEvent","preventDefault","stopPropagation","BaseMenu","menuElement","menuItemSelector","menuLinkSelector","submenuItemSelector","submenuToggleSelector","submenuSelector","controllerElement","containerElement","isTopLevel","hoverType","hoverDelay","menuItems","submenuItems","submenus","controller","container","domSelectors","menuLinks","rootMenu","submenuOpenClass","submenuCloseClass","root","focussedChild","state","hover","delay","MenuType","MenuItemType","MenuToggleType","validate","findRootMenu","setDOMElements","createChildElements","selectors","currentEvent","currentMenuItem","setParentChild","updateEvents","index","found","menuItem","focusChild","submenuToggle","setDOMElementType","base","filter","baseElement","baseFilter","selector","from","querySelectorAll","addDOMElementType","clearDOMElementType","toggler","submenu","push","handleFocus","addEventListener","handleClick","startEventType","endEventType","toggleToggle","blurChildren","handleHover","some","focusCurrentChild","setTimeout","handleKeydown","handleKeyup","focusFirstChild","blurCurrentChild","focusLastChild","focusNextChild","focusPreviousChild","focusController","focusContainer","DisclosureMenuItem","DisclosureMenuToggle","DisclosureMenu","optionalKeySupport","optionalSupport","contains","target","submenuKeys","controllerKeys","parentKeys","click","hasOpenChild","Bootstrap4DisclosureMenuItem","Bootstrap4DisclosureMenuToggle","hasAttribute","removeAttribute","Bootstrap4DisclosureMenu"],"mappings":"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"}